{"version":3,"sources":["assets/visibility-on.svg","assets/visibility-off.svg","assets/logo.svg","assets/sucess.svg","components/ImageLogo.js","components/Input.js","components/Button.js","screens/onboarding/Login/LoginScreen.js","screens/onboarding/Login/LoginResetPasswordScreen.js","screens/onboarding/Login/ResetPasswordCode.js","screens/onboarding/Login/NewPasswordScreen.js","screens/onboarding/Login/ResetPasswordScreen.js","screens/onboarding/User/UserSucess.js","dataflow/modules/sign-up-modules.js","screens/onboarding/User/UserForm.js","screens/onboarding/User/UserTerms.js","screens/onboarding/User/CreateUserScreen.js","screens/dashboard/index.js","routes/PrivateRoute.js","NoMatch.js","routes/routes.js","App.js","serviceWorker.js","store.js","index.js"],"names":["module","exports","LogoImage","styled","img","props","loginScreen","ImageLogo","src","Logo","alt","InputForm","input","login","Input","type","onChange","value","placeholder","name","MyButton","button","Button","onClick","text","ContainerForm","div","Form","form","InputBox","span","ImagePassword","off","Label","label","Span","ButtonText","Link","Error","h4","LoginScreen","handleChangeType","setState","state","handleSubmit","ev","preventDefault","email","email2","error","handleChangeEmail","target","handleChangePassword","password","console","log","this","onSubmit","VisibilityOn","VisibilityOff","to","React","Component","Paragraph","p","LoginResetPasswordScreen","Title","h1","BoxErro","Erro","SpanParagraph","ErrorPassword","VoltarLogin","NewPasswordScreen","handleChangeNumber","number","Box","BoxButton","ResetPasswordEmailScreen","redirect","handleInsertCodeScreen","Modal","TitleTerms","TextTerms","TextTermsBold","strong","connect","signup","Sucess","users","ADD_NEW_USER","initialState","withError","BlockSmallerInput","TitleForm","ParagraphInput","h6","ErrorEmpty","FisicalPersonForm","togglePassword","modalSucess","user","surname","rg","sendingBody","uf","birth","cpf","telephone","isErrorRg","isErrorPassword","isErrorCpf","isEmpty","dataUser","handleModalSucess","handleChange","field","length","errors","addNewUser","errorMessage","isErrorOrgao","isErrorUf","isErrorEmail","Container","min","require","className","handleModalTerms","dispatch","Overlay","section","ButtonTerms","BlockTerms","TextUpdate","Terms","SubtitleTerms","h3","ModalTerms","CreateFisicalPersonScreen","modalTerms","Index","PrivateRoute","component","rest","render","NoMatch","Routes","exact","path","Login","ResetPasswordCode","NewPassowrdScreen","CreateUserScreen","Dashboard","App","Boolean","window","location","hostname","match","reducers","combineReducers","action","Object","assign","store","compose","applyMiddleware","thunkMiddleware","bundle","createStore","createStoreWithMiddleware","devToolsExtension","f","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.4b4dc35f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/visibility-on.54d5a3d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/visibility-off.f95eae64.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.e049bfe2.svg\";","module.exports = __webpack_public_path__ + \"static/media/sucess.c5fe52db.svg\";","// Libs\nimport React from 'react';\nimport styled from 'styled-components';\n\n// Images\nimport Logo from '../assets/logo.svg';\n\nexport const LogoImage = styled.img`\n  width: ${props => (props.loginScreen ? '110px' : '180px')};\n  margin: ${props => (props.loginScreen ? '3rem' : '1.5rem 0')};\n\n`;\n\nexport default function ImageLogo(props) {\n\treturn <LogoImage src={Logo} loginScreen={props.loginScreen} alt=\"Osc Logo\" />;\n}\n","// Libs\nimport React from 'react';\nimport styled from 'styled-components';\n\n\nexport const InputForm = styled.input`\n  width: ${props => (props.login ? '100%' : '95%')};\n  height: 45px;\n  border: 1px solid #ffcfcd;\n  border-radius: 3px;\n  background: #fafafa;\n  padding: 0.5rem;\n  font-size: 0.9rem;\n  font-family: Overpass, Light;\n  position: relative;\n\n  @media (max-width: 425px) {\n    width: 100%;\n  }\n`;\n\nexport default function Input(props) {\n\n  return (\n    <InputForm\n      login={props.login}\n      type={props.type}\n      onChange={props.onChange}\n      value={props.value}\n      placeholder={props.placeholder}\n      name={props.name}\n    />\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport const MyButton = styled.button`\n  width: ${props => (props.login ? '75%' : '87%')};\n  height: 50px;\n  color: #fff;\n  background-color: #ff4136;\n  border: 0;\n  border-radius: 3px;\n  font-weight: 600;\n  font-family: Overpass, Bold;\n  font-size: 0.9rem;\n  box-shadow: 0 3px 6px #00000029;\n  margin: ${props => (props.login ? \"1.7rem\" : \"1.5rem 0\")};\n  text-transform: uppercase;\n  \n  @media (max-width: 648px) {\n    width: ${props => (props.login ? '90%' : '87%')};\n  }\n\n  @media (max-width: 320px) {\n    width: ${props => (props.login ? \"83%\" : \"87%\")};\n  @media (max-width: 490px) {\n    width: ${props => (props.login ? '90%' : '87%')};\n  }\n`;\n\nexport default function Button(props) {\n\treturn (\n\t\t<MyButton onClick={props.onClick} login={props.login} type={props.type}>\n\t\t\t{props.text}\n\t\t</MyButton>\n\t);\n}\n","// Libs\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n// Components\nimport ImageLogo from '../../../components/ImageLogo';\nimport Input from '../../../components/Input';\nimport Button from '../../../components/Button';\n\nimport VisibilityOn from '../../../assets/visibility-on.svg';\nimport VisibilityOff from '../../../assets/visibility-off.svg';\n\nexport const ContainerForm = styled.div`\n  height: 100vh;\n  background-color: #FFCFCD;\n  display: flex;\n  align-items: center;\n\tjustify-content: center;\n  margin: 0;\n  /* padding: 5rem; */\n\n  @media (max-width: 648px) {\n\t\t\tbackground-color: #fff;\n\t \t }\n\t\t}\n\n\t\t@media (max-width: 550px) {\n\t\t\tpadding: 1rem;\n\t \t }\n\t\t}\n`;\n\nexport const Form = styled.form`\n  width: 30%;\n  background-color: #fff;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n\n\t@media (max-width: 980px) {\n\t\t\twidth: 70%;\n\t \t }\n\t\t}\n\n  @media (max-width: 648px) {\n\t\t\t\twidth: 100%;\n\t  \t}\n\t\t}\n`;\n\nexport const InputBox = styled.span`\n\twidth: 75%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tposition: relative;\n\n\t@media (max-width: 648px) {\n\t\t\t\twidth: 90%;\n\t\t  }\n\t\t}\n\n\t@media (max-width: 490px) {\n\t\t\t\twidth: 100%;\n\t\t  }\n\t\t}\n`;\n\nexport const ImagePassword = styled.img`\n  position: absolute;\n  bottom: ${props => (props.off ? '1rem' : '0.875rem')};\n  right: 0.7rem;\n  cursor: pointer;\n`;\n\nexport const Label = styled.label`\n  color: #85144b;\n  font-size: 0.7rem;\n  font-family: Overpass, Bold;\n  margin-top: 1rem;\n  margin-bottom: 0.3rem;\n\tpadding-left: 0.8rem;\n`;\n\nexport const Span = styled.span` \n  width: 75%;\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-top: 0.5rem;\n\tmargin-bottom: 2rem;\n\n\n\t@media (max-width: 648px) {\n\t\t\twidth: 88%;\n\t \t }\n\t\t}\n\n\t@media (max-width: 488px) {\n\t\t\twidth: 99%;\n\t \t }\n\t\t}\n`;\n\nexport const ButtonText = styled(Link)`\n  color: #85144B;\n  font-size: 0.75rem; \n  text-decoration: none;\n`;\n\nexport const Error = styled.h4`\n  width: 25vw;\n  width: 43%;\n  color: #D53B40;\n  display: flex;\n  align-self: flex-end;\n  font-size: 0.75rem;\n  font-family: Eurostile, Medium;\n\n  @media (max-width: 648px) {\n\t\t\t\twidth: 40%;\n\t\t  }\n\t\t}\t\n`;\n\n\nclass LoginScreen extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tvalue: '',\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\terror: false,\n\t\t\ttype: 'password',\n\t\t};\n\t}\n\n\thandleChangeType = () => {\n\t\tthis.setState({\n\t\t\ttype: this.state.type === 'password' ? 'text' : 'password',\n\t\t});\n\t}\n\n\thandleSubmit = (ev) => {\n\t\tev.preventDefault();\n\t\tif (this.state.email !== this.state.email2) {\n\t\t\tthis.setState({\n\t\t\t\terror: true,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\terror: false,\n\n\t\t\t});\n\t\t}\n\t}\n\n\thandleChangeEmail = (ev) => {\n\t\tthis.setState({\n\t\t\temail: ev.target.value,\n\t\t});\n\t};\n\n\thandleChangePassword = (ev) => {\n\t\tthis.setState({\n\t\t\tpassword: ev.target.value,\n\t\t});\n\t};\n\n\n\thandleSubmit = (ev) => {\n\t\tev.preventDefault();\n\t\tif (this.state.email !== this.state.email2) {\n\t\t\tthis.setState({\n\t\t\t\terror: true,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\terror: false,\n\n\t\t\t});\n\t\t}\n\t}\n\n\thandleChangeEmail = (ev) => {\n\t\tthis.setState({\n\t\t\temail: ev.target.value,\n\t\t});\n\t};\n\n\thandleChangePassword = (ev) => {\n\t\tthis.setState({\n\t\t\tpassword: ev.target.value,\n\t\t});\n\t}\n\n\trender() {\n\t\tconsole.log(this.state.email);\n\t\treturn (\n\t\t\t<ContainerForm>\n\t\t\t\t<Form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<ImageLogo loginScreen />\n\t\t\t\t\t<InputBox>\n\t\t\t\t\t\t<Label>E-MAIL</Label>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tlogin\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tonChange={this.handleChangeEmail}\n\t\t\t\t\t\t\tplaceholder=\"name@email.com\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InputBox>\n\t\t\t\t\t<InputBox>\n\t\t\t\t\t\t<Label>SENHA</Label>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tlogin\n\t\t\t\t\t\t\ttype={this.state.type}\n\t\t\t\t\t\t\tonChange={this.handleChangePassword}\n\t\t\t\t\t\t\tplaceholder=\"Insert password\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<ImagePassword\n\t\t\t\t\t\t\t\tsrc={this.state.type === 'password' ? VisibilityOn : VisibilityOff}\n\t\t\t\t\t\t\t\tonClick={this.handleChangeType}\n\t\t\t\t\t\t\t\toff={this.state.type === 'password'}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</InputBox>\n\t\t\t\t\t{this.state.error && <Error>Email e/ ou senha incorreta</Error>}\n\t\t\t\t\t{/* {this.state.error && <Error>Endereço de email inválido</Error> */}\n\t\t\t\t\t<Button\n\t\t\t\t\t\tlogin\n\t\t\t\t\t\ttext=\"ENTRAR\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Span>\n\t\t\t\t\t\t<ButtonText to={'/createuser'}>CRIAR CONTA</ButtonText>\n\t\t\t\t\t\t<ButtonText to={'/resetpassword'}>RESETAR SENHA</ButtonText>\n\t\t\t\t\t</Span>\n\t\t\t\t</Form>\n\t\t\t</ContainerForm>\n\t\t);\n\t}\n}\n\nexport default LoginScreen;\n","// Libs\nimport React from 'react';\nimport styled from 'styled-components';\n\n// Components\nimport ImageLogo from '../../../components/ImageLogo';\nimport Input from '../../../components/Input';\nimport Button from '../../../components/Button';\n\nimport VisibilityOn from '../../../assets/visibility-on.svg';\nimport VisibilityOff from '../../../assets/visibility-off.svg';\n\n\nexport const ContainerForm = styled.div`\n  height: 100vh;\n  background-color: #FFCFCD;\n  display: flex;\n  align-items: center;\n\tjustify-content: center;\n  margin: 0;\n\n  @media (max-width: 648px) {\n\t\t\tbackground-color: #fff;\n\t \t }\n\t\t}\n\n\t\t@media (max-width: 550px) {\n\t\t\tpadding: 1rem;\n\t \t }\n\t\t}\n`;\n\nexport const Form = styled.form`\n  width: 30%;\n  background-color: #fff;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n\n\t@media (max-width: 980px) {\n\t\t\twidth: 70%;\n\t \t }\n\t\t}\n\n  @media (max-width: 648px) {\n\t\t\t\twidth: 100%;\n\t  \t}\n\t\t}\n`;\n\nexport const Paragraph = styled.p`\n  color: #231F20;\n  font-size: 0.8rem;\n  font-family: Overpass, Regular;\n  margin-left: 1rem;\n\n`;\n\nexport const InputBox = styled.span`\n\twidth: 75%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tposition: relative;\n\n\t@media (max-width: 648px) {\n\t\t\t\twidth: 90%;\n\t\t  }\n\t\t}\n\n\t@media (max-width: 490px) {\n\t\t\t\twidth: 100%;\n\t\t  }\n\t\t}\n`;\n\nexport const ImagePassword = styled.img`\n  position: absolute;\n  bottom: ${props => (props.off ? '1rem' : '0.875rem')};\n  right: 0.7rem;\n  cursor: pointer;\n`;\n\nexport const Label = styled.label`\n  color: #85144b;\n  font-size: 0.7rem;\n  font-family: Overpass, Bold;\n  margin-top: 1rem;\n  margin-bottom: 0.3rem;\n\tpadding-left: 0.8rem;\n`;\n\nexport const Span = styled.span` \n  width: 75%;\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-top: 0.5rem;\n\tmargin-bottom: 2rem;\n\n\n\t@media (max-width: 648px) {\n\t\t\twidth: 88%;\n\t \t }\n\t\t}\n\n\t@media (max-width: 488px) {\n\t\t\twidth: 99%;\n\t \t }\n\t\t}\n`;\n\n\nclass LoginResetPasswordScreen extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tvalue: '',\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\terror: false,\n\t\t\ttype: 'password',\n\t\t};\n\t}\n\n  handleChangeType = () => {\n  \tthis.setState({\n  \t\ttype: this.state.type === 'password' ? 'text' : 'password',\n  \t});\n  }\n\n\n  render() {\n  \treturn (\n  \t\t<ContainerForm>\n  \t\t\t<Form onSubmit={this.handleSubmit}>\n  \t\t\t\t<ImageLogo loginScreen />\n  \t\t\t\t<InputBox>\n  \t\t\t\t\t<Paragraph>The (name@email.com) password has been reseted, login to access you dashboard</Paragraph>\n  \t\t\t\t\t<Label>E-MAIL</Label>\n  \t\t\t\t\t<Input\n  \t\t\t\t\t\tlogin\n  \t\t\t\t\t\ttype=\"email\"\n  \t\t\t\t\t\tonChange={this.handleChangeEmail}\n  \t\t\t\t\t\tplaceholder=\"name@email.com\"\n  \t\t\t\t\t/>\n  \t\t\t\t</InputBox>\n  \t\t\t\t<InputBox>\n  \t\t\t\t\t<Label>SENHA</Label>\n  \t\t\t\t\t<Input\n  \t\t\t\t\t\tlogin\n  \t\t\t\t\t\ttype={this.state.type}\n  \t\t\t\t\t\tonChange={this.handleChangePassword}\n  \t\t\t\t\t\tplaceholder=\"Insert password\"\n  \t\t\t\t\t/>\n  \t\t\t\t\t<span>\n  \t\t\t\t\t\t<ImagePassword\n  \t\t\t\t\t\t\tsrc={this.state.type === 'password' ? VisibilityOn : VisibilityOff}\n  \t\t\t\t\t\t\tonClick={this.handleChangeType}\n  \t\t\t\t\t\t\toff={this.state.type === 'password'}\n  \t\t\t\t\t\t/>\n  \t\t\t\t\t</span>\n  \t\t\t\t</InputBox>\n  \t\t\t\t<Button\n  \t\t\t\t\tlogin\n  \t\t\t\t\ttext=\"ENTRAR\"\n  \t\t\t\t\ttype=\"submit\"\n  \t\t\t\t/>\n  \t\t\t</Form>\n  \t\t</ContainerForm>\n  \t);\n  }\n}\n\n\nexport default LoginResetPasswordScreen;\n","// Libs\nimport React from 'react';\nimport styled from 'styled-components';\n\n// Components\nimport ImageLogo from '../../../components/ImageLogo';\n\nexport const ContainerForm = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: #FFCFCD;\n  display: flex;\n  align-items: center;\n  flex-direction: column; \n  margin: 0;\n  padding: 5rem;\n`;\n\nexport const Form = styled.form`\n  width: 40%;\n  height: 40vh;\n  background-color: #fff;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: space-evenly;\n`;\n\nexport const Title = styled.h1`\n  width: 63%;\n  color: #85144B;\n  font-size: 1rem;\n  font-weight: bold;\n  margin-top: 0.9rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\n\nexport const BoxErro = styled.div`\n\twidth: 62%;\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n\nexport const Erro = styled.p`\n  color: #FF4136;\n  font-size: 2.5rem;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Span = styled.span` \n  color: #231F20;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`;\n\nexport const SpanParagraph = styled.span`\n  width: 80%;\n  font-size: 0.8rem;\n  opacity: 1;   \n`;\n\nclass ErrorPassword extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<ContainerForm>\n\t\t\t\t<ImageLogo />\n\t\t\t\t<Form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<Title>Here is your password reset code:</Title>\n\t\t\t\t\t<BoxErro>\n\t\t\t\t\t\t<Erro>210704</Erro>\n\t\t\t\t\t</BoxErro>\n\t\t\t\t\t<Span>\n\t\t\t\t\t\t<SpanParagraph>A password reset was required for your email address:\n            name@email.com. If you did not perform this request,\n            you can access your account normally.</SpanParagraph>\n\t\t\t\t\t</Span>\n\t\t\t\t</Form>\n\t\t\t</ContainerForm>\n\t\t);\n\t}\n}\n\nexport default ErrorPassword;\n","// Libs\nimport React from 'react';\nimport styled from 'styled-components';\n\n// Components\nimport ImageLogo from '../../../components/ImageLogo';\nimport Input from '../../../components/Input';\nimport Button from '../../../components/Button';\n\nexport const ContainerForm = styled.div`\n  height: 100vh;\n  background-color: #FFCFCD;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  margin: 0;\n\n  @media (max-width: 648px) {\n\t\t\tbackground-color: #fff;\n\t \t}\n\t}\n`;\n\nexport const Form = styled.form`\n  width: 28%;\n  background-color: #fff;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n\n  @media (max-width: 980px) {\n\t\t\twidth: 40%;\n\t \t}\n\t}\n\n\t@media (max-width: 786px) {\n\t\t\twidth: 45%;\n\t \t}\n\t}\n\n\t@media (max-width: 648px) {\n\t\t\twidth: 90%;\n\t\t\tmargin: 0;\n\t \t}\n\t}\n`;\n\nexport const Span = styled.span`\n\twidth: 75%;\n  margin-top: 0.3rem;\n\n  @media (max-width: 648px) {\n\t\t\twidth: 90%;\n\t \t}\n\t}\n`;\n\nexport const Title = styled.h1`\n\tcolor: #231F20;\n\tfont-size: 1rem;\n  font-family: Overpass, ExtraBold;\n  margin: 1rem 0 1rem 0;\n\n`;\n\nexport const Paragraph = styled.p`\n\tfont-size: 0.8rem;\n\tcolor: #231F20;\n  font-family: Overpass, Regular;\n  margin-bottom: 1rem;\n`;\n\nexport const Error = styled.h4`\n  width: 25vw;\n  width: 43%;\n  color: #D53B40;\n  display: flex;\n  align-self: flex-end;\n  font-size: 0.75rem;\n  font-family: Overpass, Regular;\n\n  @media (max-width: 648px) {\n\t\t\t\twidth: 40%;\n\t\t  }\n\t\t}\t\n`;\n\nexport const Label = styled.label`\n\tcolor: #85144B;\n  font-size: 0.7rem;\n  margin: 0.9rem;\n\tfont-family: Overpass;\n  font-weight: bold;\n`;\n\nexport const InputBox = styled.input`\n\twidth: 75%;\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n\n\nexport const VoltarLogin = styled.span` \n  display: flex;\n  justify-content: center;\n\n  buttonText {\n    color: #85144B;\n    font-size: 1rem; \n\t\tfont-family: Overpass, Regular;\n    margin-bottom: 1rem;\n  }\n`;\n\n\nclass NewPasswordScreen extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tvalue: '',\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\ttype: 'password',\n\t\t};\n\t}\n\n\thandleChangeNumber = (ev) => {\n\t\tthis.setState({\n\t\t\tnumber: ev.target.value,\n\t\t});\n\t};\n\n\thandleChangePassword = (ev) => {\n\t\tthis.setState({\n\t\t\tpassword: ev.target.value,\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<ContainerForm>\n\t\t\t\t<ImageLogo loginScreen/>\n\t\t\t\t<Form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<Span>\n\t\t\t\t\t\t<Title>PASSWORD RESET</Title>\n\t\t\t\t\t\t<Paragraph>A confirmation code sent to name@email.com, please, paste it bellow:</Paragraph>\n\t\t\t\t\t\t{this.state.error && <Error>Confirmation code incorrect</Error>}\n\t\t\t\t\t\t<Label>CONFIRMATION CODE</Label>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tlogin\n\t\t\t\t\t\t\tonChange={this.handleChangeNumber}\n\t\t\t\t\t\t\tplaceholder=\"Insert here the code\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Label>NEW PASSWORD</Label>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tlogin\n\t\t\t\t\t\t\ttype={this.state.type}\n\t\t\t\t\t\t\tonChange={this.handleChangePassword}\n\t\t\t\t\t\t\tplaceholder=\"Insert here the code\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Label>REPEAT NEW PASSWORD</Label>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tlogin\n\t\t\t\t\t\t\ttype={this.state.type}\n\t\t\t\t\t\t\tonChange={this.handleChangePassword}\n\t\t\t\t\t\t\tplaceholder=\"Insert here the code\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Span>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tlogin\n\t\t\t\t\t\ttext=\"PROCEED WITH NEW PASSWORD\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t/>\n\t\t\t\t\t<VoltarLogin>\n\t\t\t\t\t\t<buttonText>RESEND EMAIL</buttonText>\n\t\t\t\t\t</VoltarLogin>\n\t\t\t\t</Form>\n\t\t\t</ContainerForm>\n\t\t);\n\t}\n}\n\nexport default NewPasswordScreen;\n","// Libs\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Redirect } from 'react-router-dom';\n\n// Components\nimport ImageLogo from '../../../components/ImageLogo';\nimport Input from '../../../components/Input';\nimport Button from '../../../components/Button';\n// import CreateFisicalPersonScreen from '../User/CreateUserScreen;\n// import { InputBox } from './login';\n\n\nexport const ContainerForm = styled.div`\n  height: 100vh;\n  background-color: #FFCFCD;\n  display: flex;\n  align-items: center;\n  flex-direction: column; \n  margin: 0;\n  padding: 5rem;\n\n\t@media (max-width: 648px) {\n\t\t\tbackground-color: #fff;\n\t\t\tpadding: 1rem;\n\t\t\tjustify-content: center;\n\t \t}\n\t}\n`;\n\nexport const Form = styled.form`\n  width: 40%;\n  background-color: #fff;\n  padding: 1rem;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n\n  @media (max-width: 980px) {\n\t\t\twidth: 55%;\n\t \t}\n\t}\n\n\t@media (max-width: 786px) {\n\t\t\twidth: 70%;\n\t \t}\n\t}\n\n\t@media (max-width: 520px) {\n\t\t\twidth: 100%;\n\t \t}\n\t}\n`;\n\nexport const Title = styled.h1`\n  width: 90%;\n  font-size: 1.2rem;\n  font-family: Overpass, ExtraBold;\n`;\n\nexport const Box = styled.span`\n   width: 90%;\n   display: flex;\n   flex-direction: column;\n\n\t@media (max-width: 648px) {\n\t\t\twidth: 100%;\n\t \t}\n\t}\n`;\n\nexport const Label = styled.label`\n  color: #85144B;\n  font-size: 0.7rem;\n  margin: 0.9rem;\n  margin-top: 1rem;\n  margin-bottom: 0.3rem;\n  font-family: Overpass, Regular; \n`;\n\nexport const BoxButton = styled.div`\n  width: 100%;\n  margin-top: 0.5rem;\n\n\tButton {\n\t\twidth: 95%;\n\t\tfont-size: 0.9rem;\n\t\tfont-family: Eurostile, Bold; \n\n\t\t@media (max-width: 425px) {\n\t\t\twidth: 100%;\n\t \t}\n\t}\n`;\n\nexport const VoltarLogin = styled.span` \n  width: 95%;\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  justify-content: space-around;\n  margin: 1rem;\n\n  buttonText {\n  color: #85144B;\n  font-size: 1rem; \n\tfont-family: Eurostile, Regular; \n  }\n`;\n\nclass ResetPasswordEmailScreen extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tvalue: '',\n\t\t\temail: '',\n\t\t\tredirect: null,\n\t\t};\n\t}\n\n\thandleChangeEmail = (ev) => {\n\t\tthis.setState({\n\t\t\temail: ev.target.value,\n\t\t});\n\t};\n\n\thandleSubmit = () => {\n\t\tconsole.log('cliquei');\n\t\tif (this.state.redirect) {\n\t\t\treturn <Redirect to={this.state.redirect}/>;\n\t\t}\n\t\treturn null;\n\t}\n\n\thandleInsertCodeScreen = () => {\n\t\tthis.setState({ redirect: '/resetcode' });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<ContainerForm>\n\t\t\t\t<ImageLogo loginScreen />\n\t\t\t\t<Form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<Title>PASSWORD RESET</Title>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Label>E-MAIL</Label>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tonChange={this.handleChangeEmail}\n\t\t\t\t\t\t\tplaceholder=\"name@email.com\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<BoxButton>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={this.handleInsertCodeScreen}\n\t\t\t\t\t\t\t\tto={'/resetcode'}\n\t\t\t\t\t\t\t\ttext=\"REQUEST PASSWORD RESET\"\n\t\t\t\t\t\t\t\ttype= \"submit\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</BoxButton>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<VoltarLogin>\n\t\t\t\t\t\t<buttonText>BACK TO LOGIN</buttonText>\n\t\t\t\t\t</VoltarLogin>\n\t\t\t\t</Form>\n\t\t\t</ContainerForm>\n\t\t);\n\t}\n}\n\nexport default ResetPasswordEmailScreen;\n","// Libs\nimport React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n// Components\nimport Button from '../../../components/Button';\n\n// Images\nimport Sucess from '../../../assets/sucess.svg';\n\nconst mapStateToProps = state => ({\n  signup: state.signup,\n});\n\nconst Modal = styled.div`\n  width: 35vw;\n  height: 65vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n  background: #fff;\n  padding: 0 0.5rem;\n\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n  @media (max-width: 648px) {\n    width: 100%;\n    height: 100vh;\n    padding: 0.5rem;\n  }\n\n\n  a{\n      width: 100%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      text-decoration: none;\n    }\n`;\n\nconst TitleTerms = styled.h1`\n    font-family: Overpass, ExtraBold;\n    font-size: 1.25rem;\n`;\n\nconst TextTerms = styled.p`\n    font-family: Overpass;\n    width: 80%;\n    font-size: 0.8rem;\n    line-height: 1rem;\n`;\n\nconst TextTermsBold = styled.strong`\n    margin-left: 0.5rem;\n    text-decoration: underline;\n    cursor: pointer;\n\n`;\n\nconst ButtonLogin = styled.button`\n    text-transform: uppercase;\n    font-size: 1rem;\n    color: #85144b;\n    cursor: pointer;\n    font-family: Overpass, Bold;\n    background: none;\n    border: none;\n    background: #ff4136;\n    width: 87%;\n`;\n\nconst FisicalPersonSucess = props => (\n    <Modal>\n      <TitleTerms>Cadastro de Pessoa física concluído!</TitleTerms>\n      <img src={Sucess} alt=\"Sucess\" />\n      <TextTerms>\n        Enviamos um e-mail de confirmação para\n        <TextTermsBold>{props.signup.users.email}</TextTermsBold>. Verifique sua caixa de entrada para\n        prosseguir.\n      </TextTerms>\n      <TextTerms>\n        Caso não tenha recebido a confirmação, clique em\n        <TextTermsBold>Reenviar email.</TextTermsBold>\n      </TextTerms>\n      <Link to=\"/\">\n        <Button text=\"fazer login\"/>\n      </Link>\n    </Modal>\n  );\nexport default connect(mapStateToProps)(FisicalPersonSucess);\n","const ADD_NEW_USER = 'osc/register/ADD_NEW_USER';\n\nconst initialState = {\n\tusers: {},\n};\n// REDUCER\nexport default function SignUpReducer(state = initialState, action) {\n\tswitch (action.type) {\n\tcase ADD_NEW_USER:\n\t\treturn Object.assign({}, state, {\n\t\t\tusers: {\n\t\t\t\t...state.users,\n\t\t\t\t...action.user,\n\t\t\t},\n\t\t});\n\tdefault:\n\t\treturn state;\n\t}\n}\n// ACTION TYPE\nexport const addNewUser = user => ({\n\ttype: ADD_NEW_USER,\n\tuser,\n})\n","/* eslint-disable class-methods-use-this */\n/* eslint-disable indent */\n/* eslint-disable no-mixed-spaces-and-tabs */\n/* eslint-disable no-dupe-class-members */\n\n// Libs\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\n// Components\nimport Button from '../../../components/Button';\nimport Input from '../../../components/Input';\nimport ImageLogo from '../../../components/ImageLogo';\nimport FisicalPersonSucess from './UserSucess';\nimport { Container } from './CreateUserScreen';\n\n// Images\nimport VisibilityOff from '../../../assets/visibility-off.svg';\nimport VisibilityOn from '../../../assets/visibility-on.svg';\n\n// Redux\nimport { addNewUser } from '../../../dataflow/modules/sign-up-modules';\n\nconst mapStateToProps = state => ({\n  signup: state.signup,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addNewUser: (user) => {\n    dispatch(addNewUser(user));\n  },\n});\n\nconst Form = styled.form`\n  min-width: 35%;\n  min-height: 100vh;\n  background-color: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 1rem 0;\n  border-radius: 3px;\n  box-shadow: 0 1px 2px #00000029;\n\n  input {\n    border: ${props => (props.withError === true ? '1px solid #f00' : '1px solid #ffcfcd;')};\n  }\n\n  @media (max-width: 500px) {\n    margin: 0;\n    padding: 0 2rem;\n  }\n\n  @media (max-width: 375px) {\n    padding: 1rem;\n  }\n`;\n\nconst BlockSmallerInput = styled.span`\n    width: 90%;\n    display: flex;\n    justify-content: space-between;\n    position: relative;\n\n    @media(max-width: 425px){\n      width: 100%;\n      flex-direction: column;\n    }\n`;\n\nconst TitleForm = styled.h1`\n  font-size: 1.3rem;\n  font-family: \"Overpass\", ExtraBold;\n  text-transform: uppercase;\n  margin: 2rem 0 1.5rem 2.6rem;\n  align-self: flex-start;\n  \n  @media (max-width: 425px) {\n      margin: 2rem 0;\n      font-size: 1.3rem;\n    }\n`;\n\nconst Label = styled.label`\n  position: relative;\n  width: 90%;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n\n  @media (max-width: 425px) {\n    width: 100%;\n  }\n`;\n\nconst ParagraphInput = styled.p`\n    align-self: flex-start;\n    text-transform: uppercase;\n    color: #85144b;\n    font-size: 0.8rem;\n    margin: 1.5rem 1.3rem 1rem 1.3rem;\n    font-family: Overpass;\n    font-weight: bold;\n\n    @media (max-width: 425px) {\n      text-align: left;\n      margin-left: 0.2rem;\n    }\n`;\n\nconst Error = styled.h6`\n  font-size: 0.6rem;\n  color: #f00;\n  align-self: flex-start;\n  font-weight: normal;\n  margin-left: 1.4rem;\n\n  @media (max-width: 425px) {\n    margin: 0;\n  }\n`;\n\nconst ErrorEmpty = styled.h6`\n  font-size: 0.7rem;\n  color: #F00;\n  align-self: flex-start;\n  font-weight: normal;\n  margin-left: 2.5rem;\n`;\nconst InputForm = styled.input`\n  width: 90%;\n  height: 56px;\n  border: 1px solid #ffcfcd;\n  background: #fafafa;\n  padding: 0.5rem;\n  font-size: 0.9rem;\n  text-transform: uppercase;\n\n  @media (max-width: 425px) {\n    width: 100%;\n  }\n`;\n\nconst ImagePassword = styled.img`\n  position: absolute;\n  bottom: 1.2rem;\n  right: 0.5rem;\n  cursor: pointer;\n`;\nconst TextTerms = styled.p`\n  font-size: 0.8rem;\n  margin-top: 1.5rem;\n  margin-bottom: 0.5rem;\n  color: #505050;\n  font-family: Overpass, Regular;\n  text-align: center;\n\n  strong {\n    color: #85144b;\n    font-size: 0.7rem;\n    cursor: pointer;\n    text-decoration: underline;\n    margin: 0 0.2rem;\n    font-family: Overpass, Regular;\n  }\n`;\n\n\nclass FisicalPersonForm extends Component {\n  state = {\n    togglePassword: false,\n    modalSucess: false,\n    user: {\n      name: '',\n      surname: '',\n      rg: '',\n      sendingBody: '',\n      uf: '',\n      birth: '',\n      cpf: '',\n      email: '',\n      telephone: '',\n      password: '',\n    },\n    isErrorRg: false,\n    isErrorPassword: false,\n    isErrorCpf: false,\n    isEmpty: false,\n    dataUser: [],\n  };\n\n  togglePassword = (ev) => {\n    ev.preventDefault();\n    this.setState({\n      togglePassword: !this.state.togglePassword,\n    });\n  };\n\n  togglePassword = (ev) => {\n    ev.preventDefault();\n    this.setState({\n      togglePassword: !this.state.togglePassword,\n    });\n  };\n\n  handleModalSucess = () => {\n    this.setState({\n      modalSucess: !this.state.modalSucess,\n    });\n  };\n\n  handleChange = (field, ev) => {\n    const { user } = this.state;\n    user[field] = ev.target.value;\n    this.setState({ user });\n  };\n\n  handleSubmit = (ev) => {\n    ev.preventDefault();\n    const { user } = this.state;\n    const { rg, cpf, password } = this.state.user;\n    if (rg.length < 9 || cpf.length < 11 || password.length < 4) {\n      this.errors();\n      this.setState({\n        isErrorCpf: true,\n        isErrorPassword: true,\n        isErrorRg: true,\n      });\n    } else if (rg.length == 9 && cpf.length == 11 && password.length > 4) {\n      this.setState({\n        isErrorRg: false,\n        isErrorPassword: false,\n        isErrorCpf: false,\n      });\n      this.props.addNewUser(user);\n      this.handleModalSucess();\n    }\n  };\n\n  errors = () => {\n    const { user } = this.state;\n    const {\n      name,\n      surname,\n      rg,\n      sendingBody,\n      uf,\n      birth,\n      cpf,\n      email,\n      telephone,\n      password,\n    } = this.state.user;\n\n    if (\n      name,\n      surname,\n      rg,\n      sendingBody,\n      uf,\n      birth,\n      cpf,\n      email,\n      telephone,\n      password === ''\n    ) {\n      this.setState({\n        isEmpty: true,\n      });\n    } else {\n      this.setState({ isEmpty: false });\n    }\n  };\n\n  render() {\n    const errorMessage = [\n      'RG inválido',\n      'Senha fraca',\n      'CPF inválido',\n      'Preencha todos os campos',\n      'E-mail inválido',\n      'Uf inválida',\n      'Orgão expedidor inválido',\n    ];\n\n    const {\n      isErrorPassword,\n      isErrorRg,\n      isErrorCpf,\n      modalSucess,\n      isEmpty,\n      isErrorOrgao,\n      isErrorUf,\n      isErrorEmail,\n    } = this.state;\n\n    return (\n      <>\n        {modalSucess === true ? (\n          <Container>\n            <FisicalPersonSucess handleModalSucess={this.handleModalSucess} />\n          </Container>\n        ) : (\n            <Container>\n              <Form onSubmit={this.handleSubmit} withError={isEmpty, isErrorEmail, isErrorRg, isErrorCpf, isErrorOrgao, isErrorUf, isErrorPassword}>\n                <ImageLogo />\n                <TitleForm>cadastrar pessoa física</TitleForm>\n                <Label>\n                  <ParagraphInput>Nome</ParagraphInput>\n                  <Input\n                    type=\"text\"\n                    onChange={ev => this.handleChange('name', ev)}\n                    value={this.state.name}\n                    placeholder=\"Nome\"\n                    name=\"nome\"\n                  />\n                </Label>\n                <Label>\n                  <ParagraphInput>Sobrenome</ParagraphInput>\n                  <Input\n                    type=\"text\"\n                    onChange={ev => this.handleChange('surname', ev)}\n                    value={this.state.surname}\n                    placeholder=\"Sobrenome\"\n                    name=\"sobrenome\"\n                  />\n                </Label>\n                <BlockSmallerInput>\n                  <Label>\n                    <ParagraphInput>rg</ParagraphInput>\n                    <InputForm\n                      type=\"number\"\n                      onChange={ev => this.handleChange('rg', ev)}\n                      value={this.state.rg}\n                      placeholder=\"000000-0\"\n                      name=\"rg\"\n                      min=\"0\"\n                    />\n                    {isErrorRg && <Error>{errorMessage[0]}</Error>}\n                  </Label>\n                  <Label>\n                    <ParagraphInput>Orgão expedidor</ParagraphInput>\n                    <InputForm\n                      type=\"text\"\n                      onChange={ev => this.handleChange('sendingBody', ev)}\n                      value={this.state.sendingBody}\n                      name=\"orgao\"\n                      placeholder=\"Detran\"\n                    />\n                  </Label>\n                </BlockSmallerInput>\n                <BlockSmallerInput>\n                  <Label>\n                    <ParagraphInput>uf</ParagraphInput>\n                    <InputForm\n                      type=\"text\"\n                      onChange={ev => this.handleChange('uf', ev)}\n                      value={this.state.uf}\n                      placeholder=\"RJ\"\n                      name=\"uf\"\n                    />\n                  </Label>\n                  <Label>\n                    <ParagraphInput>data de nascimento</ParagraphInput>\n                    <InputForm\n                      type=\"text\"\n                      onChange={ev => this.handleChange('birth', ev)}\n                      value={this.state.birth}\n                      placeholder=\"02/01/2020\"\n                      name=\"nascimento\"\n                    />\n                  </Label>\n                </BlockSmallerInput>\n                <Label>\n                  <ParagraphInput>cpf</ParagraphInput>\n                  <Input\n                    type=\"number\"\n                    onChange={ev => this.handleChange('cpf', ev)}\n                    value={this.state.cpf}\n                    placeholder=\"000000-0\"\n                    name=\"cpf\"\n                    min=\"0\"\n                  />\n                  {isErrorCpf && <Error>{errorMessage[2]}</Error>}\n                </Label>\n                <Label>\n                  <ParagraphInput>email</ParagraphInput>\n                  <Input\n                    type=\"email\"\n                    onChange={ev => this.handleChange('email', ev)}\n                    value={this.state.email}\n                    name=\"email\"\n                    placeholder=\"nome@mail.com\"\n                    require\n                  />\n                </Label>\n                <Label>\n                  <ParagraphInput>telefone</ParagraphInput>\n                  <Input\n                    type=\"tel\"\n                    onChange={ev => this.handleChange('telephone', ev)}\n                    value={this.state.telephone}\n                    placeholder=\"(00) 00000-0000\"\n                    name=\"telefone\"\n                  />\n                </Label>\n                <Label>\n                  <ParagraphInput>senha</ParagraphInput>\n                  <Input\n                    className=\"input-password\"\n                    type={\n                      this.state.togglePassword === true ? 'text' : 'password'\n                    }\n                    onChange={ev => this.handleChange('password', ev)}\n                    value={this.state.password}\n                    placeholder=\"Inserir senha\"\n                    name=\"password\"\n                  />\n                  {this.state.togglePassword === true ? (\n                    <BlockSmallerInput>\n                      <ImagePassword\n                        src={VisibilityOn}\n                        onClick={this.togglePassword}\n                      />\n                    </BlockSmallerInput>\n                  ) : (\n                      <BlockSmallerInput>\n                        <ImagePassword\n                          src={VisibilityOff}\n                          onClick={this.togglePassword}\n                        />\n                      </BlockSmallerInput>\n                    )}\n                  {isErrorPassword && <Error>{errorMessage[1]}</Error>}\n                </Label>\n                <TextTerms>\n                  Clique abaixo para concordar com os\n                <strong onClick={() => this.props.handleModalTerms()}>\n                    Termos de Serviço\n                </strong>\n                  e registrar.\n              </TextTerms>\n              {isEmpty && <ErrorEmpty>{errorMessage[3]}</ErrorEmpty>}                \n                <Button\n                  text=\"concordar e criar conta\"\n                  type=\"submit\"\n                  onClick={this.handleSubmit}\n                />\n              </Form>\n            </Container>\n          )}\n      </>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FisicalPersonForm);\n","// Libs\nimport React from 'react';\nimport styled from 'styled-components';\n\n// Images\nimport Logo from '../../../assets/logo.svg';\n\n const Overlay = styled.section`\n  min-width: 100%;\n  min-height: 100vh;\n  background-color: #00000040;\n  position: sticky;\n  top: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n\n  img{\n    display: none;\n  }\n`;\n const Modal = styled.div`\n  width: 35vw;\n  min-height: 65vh;\n  background: #fff;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    width: 90%;\n  }\n  @media (max-width: 425px) {\n    width: 100%;\n    min-height: 100vh;\n  }\n`;\n\nconst TitleTerms = styled.h1`\n  align-self: flex-start;\n  margin: 1rem 1rem;\n  font-family: Overpass, Bold;\n  font-size: 1.4rem;    \n  text-transform: uppercase;\n\n  @media (max-width: 648px) {\n    margin: 2rem 0 0.5rem 1rem;\n  }\n`;\n const ButtonTerms = styled.button`\n  width: 120px;\n  height: 36px;\n  background-color: #ff4136;\n  color: #fff;\n  text-transform: uppercase;\n  border: 0;\n  border-radius: 4px;\n  align-self: flex-end;\n  margin: 0.4rem 0.5rem 0.4rem 0;\n  box-shadow: 0 3px 6px #00000029;\n\n  @media (max-width: 648px) {\n    align-self: center;\n    width: 300px;\n    height: 56px;\n    margin: 0.8rem 0;\n    font-size: 1rem;\n    font-weight: bold;\n  }\n`;\n\n const BlockTerms = styled.div`\n  width: 97%;\n  height: 90%;\n  background: #ffcfcd;\n  padding: 1rem 1rem;\n\n  @media(max-width: 648px){\n    background: #FFF;\n  }\n`;\n\nconst TextUpdate = styled.h4`\n  color: #f00;\n  font-weight: normal;\n  font-size: 1rem;\n  font-family: Overpass, Regular;\n`;\n\n const Terms = styled.p`\n  width: 100%;\n  font-family: Overpass, Regular;\n  font-size: 0.9rem;\n`;\n\nconst SubtitleTerms = styled.h3`\n    margin: 1rem 0;\n    font-size: 0.8rem;\n    font-family: Overpass, Bold;\n`;\n\nexport default function ModalTerms(props) {\n  return (\n    <Overlay>\n      <img src={Logo} alt=\"Osc Logo\" />\n      <Modal>\n        <TitleTerms>termos de serviço</TitleTerms>\n        <BlockTerms>\n          <SubtitleTerms>OSC Legal</SubtitleTerms>\n          <TextUpdate>LAST UPDATE: December 06,2019</TextUpdate>\n          <SubtitleTerms>1. Acceptance of OSC Legal terms of servisse.</SubtitleTerms>\n          <Terms>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam ac\n            consectetur massa. Pellentesque at vestibulum justo. Donec sed nibh\n            dignissim, vestibulum neque sed, ornare ex. In purus odio, sodales\n            non nibh quis, interdum maximus neque. Proin et imperdiet elit.\n            Aliquam erat volutpat. Etiam luctus libero id neque commodo\n            placerat. Etiam vitae molestie eros. Etiam dui urna, pulvinar eget\n            neque in, pharetra bibendum diam. Donec sit amet sem eu enim\n            sollicitudin consectetur tristique ac nunc. Quisque nec risus id\n            nisi viverra gravida. Fusce sed lacus lorem. Ut sit amet luctus est.\n            Donec facilisis justo mi, ut consequat urna blandit at. Quisque\n            eleifend rutrum felis.\n          </Terms>\n        </BlockTerms>\n\n        <ButtonTerms onClick={() => props.handleModalTerms()}>OK</ButtonTerms>\n      </Modal>\n    </Overlay>\n  );\n}\n","// Libs\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\n\n// Components\nimport FisicalPersonForm from './UserForm';\nimport FisicalPersonTerms from './UserTerms';\n\nexport const Container = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #ffcfcd;\n`;\n\nclass CreateFisicalPersonScreen extends Component {\n  state = {\n    modalTerms: false,\n  };\n\n  handleModalTerms = () => {\n    this.setState({\n      modalTerms: !this.state.modalTerms,\n    });\n  };\n\n  render() {\n  \treturn (\n  \t\t<Container>\n  \t\t\t{this.state.modalTerms === true ? (\n  \t\t\t\t<FisicalPersonTerms handleModalTerms={this.handleModalTerms} />\n  \t\t\t) : (\n  \t\t\t\t<FisicalPersonForm handleModalTerms={this.handleModalTerms} />\n  \t\t\t)}\n  \t\t</Container>\n  \t);\n  }\n}\n\nexport default CreateFisicalPersonScreen;\n","import React, { Component } from 'react';\n\nexport default class Index extends Component {\n  render() {\n    return (\n      <div>\n        <p>Essa tela está ligada como uma rota privada.</p>\n      </div>\n    );\n  }\n}\n","// Libs\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { isAuthenticated } from '../auth';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n\t<Route\n\t\t{...rest}\n\t\trender={props => (isAuthenticated() ? (\n\t\t\t<Component { ...props } />\n\t\t) : (\n\t\t\t<Redirect to={{ pathname: '/', state: { from: props.location } }} />\n\t\t))\n\t\t}\n\t/>\n);\n\nexport default PrivateRoute;\n","// Libs\nimport React, { Component } from 'react';\n\nexport default class NoMatch extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Nada encontrado</h1>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","// Libs\nimport React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n// Components\n\n// onboarding\nimport Login from '../screens/onboarding/Login/LoginScreen';\nimport LoginResetPasswordScreen from '../screens/onboarding/Login/LoginResetPasswordScreen';\nimport ResetPasswordCode from '../screens/onboarding/Login/ResetPasswordCode';\nimport NewPassowrdScreen from '../screens/onboarding/Login/NewPasswordScreen';\nimport ResetPasswordEmailScreen from '../screens/onboarding/Login/ResetPasswordScreen';\n\nimport CreateUserScreen from '../screens/onboarding/User/CreateUserScreen';\n// import Organization from '../screens/dashboard/Organization/OrganizationScreen';\n\n// dashboard\nimport Dashboard from '../screens/dashboard/index';\n\nimport PrivateRoute from './PrivateRoute';\nimport NoMatch from '../NoMatch';\n\nconst Routes = () => (\n\t<BrowserRouter>\n\t\t<Switch>\n\t\t\t<Route exact path='/' component={Login} />\n\t\t\t<Route path='/login' component={Login} />\n\t\t\t<Route path='/loginreset' component={LoginResetPasswordScreen} />\n\t\t\t<Route path='/resetcode' component={ResetPasswordCode} />\n\t\t\t<Route path='/resetpassword' component={ResetPasswordEmailScreen} />\n\t\t\t<Route path='/newpassword' component={NewPassowrdScreen} />\n\t\t\t<Route path='/createuser' component={CreateUserScreen} />\n\t\t\t{/* <Route path='/organization' component={Organization} /> */}\n\n\t\t\t<Route component={NoMatch} />\n\t\t\t<PrivateRoute component={Dashboard} />\n\t\t</Switch>\n\t</BrowserRouter>\n);\n\nexport default Routes;\n","// Libs\nimport React from 'react';\n\n// Routes\nimport Routes from './routes/routes';\n\nconst App = () => <Routes />;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Libs\nimport {\n\tcompose, createStore, applyMiddleware, combineReducers,\n} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\n// Reducers\nimport SignUp from './dataflow/modules/sign-up-modules';\n\nconst reducers = combineReducers({\n\tsignup: SignUp,\n});\n\nexport default function configureStore(initialState) {\n\tconst bundle = compose(applyMiddleware(thunkMiddleware));\n\tconst createStoreWithMiddleware = bundle(createStore);\n\tconst store = createStoreWithMiddleware(\n\t\treducers,\n\t\tinitialState,\n\t\twindow.devToolsExtension ? window.devToolsExtension() : f => f,\n\t);\n\n\treturn store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore from './store';\n\nconst store = configureStore({});\n\nReactDOM.render((\n\t<Provider store={store}>\n\t\t<App/>\n\t</Provider>\n), document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}