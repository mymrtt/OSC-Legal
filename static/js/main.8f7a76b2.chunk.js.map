{"version":3,"sources":["assets/visibility-on.svg","assets/visibility-off.svg","assets/logo.svg","assets/sucess.svg","components/ImageLogo.js","components/Input.js","components/Button.js","screens/onboarding/Login/LoginScreen.js","screens/onboarding/Login/ResetPasswordCode.js","dataflow/modules/onboarding-modules.js","screens/onboarding/Login/NewPasswordScreen.js","screens/onboarding/Login/ResetPasswordScreen.js","screens/onboarding/User/CreateUserSucessScreen.js","screens/onboarding/User/CreateUserScreen.js","screens/dashboard/index.js","routes/PrivateRoute.js","routes/routes.js","App.js","serviceWorker.js","store.js","index.js"],"names":["module","exports","LogoImage","styled","img","props","width","margin","marginMobile","ImageLogo","src","Logo","alt","InputForm","input","login","isError","Input","type","onChange","value","placeholder","name","required","MyButton","button","heightMobile","widthMobile","paddingMobile","widthMobileSmall","Button","onClick","height","padding","text","ContainerForm","div","Form","form","Title","p","InputBox","span","ImagePassword","off","Label","label","Span","ButtonText","Link","Error","h4","LoginScreen","handleSubmit","ev","preventDefault","handleError","setState","redirect","state","email","password","registeredEmail","registeredPassword","error","length","handleChangeEmail","target","handleChangePassword","handleChangeType","passwordError","undefined","this","onSubmit","isResetPassword","emailReset","VisibilityOn","VisibilityOff","to","Component","connect","onboarding","users","Container","Content","h1","Code","ContainerParagraph","Paragraph","ResetPasswordCode","handleRedirect","ADD_NEW_USER","IS_RESET_PASSWORD","initialState","addNewUser","user","withError","ErrorMessage","BackLogin","NewPasswordScreen","handleErrors","newPassword","repeatPassword","newPasswordError","repetPasswordError","handleChangeNewPassword","handleChangeRepetPassword","confirmationCode","errorMessages","dispatch","info","Box","ResetPasswordEmailScreen","isErrorEmail","e","Modal","TitleTerms","SucessImage","TextTerms","TextTermsBold","strong","sucessImage","BlockSmallerInput","BlockTitle","TitleForm","ParagraphInput","ErrorEmpty","Overlay","ButtonTerms","BlockTerms","Terms","SubtitleTerms","h3","CreateUserScreen","togglePassword","modalSucess","surname","cpf","telephone","nameError","isErrorCpf","isErrorPassword","isEmpty","isTermsOpen","handleModalTerms","handleModalSucess","handleChange","field","isValidCPF","numbers","digits","sum","i","digitsEqual","charAt","substring","renderTerms","errorMessage","className","signup","Index","PrivateRoute","component","rest","render","Routes","exact","path","Login","NewPassowrdScreen","Dashboard","App","Boolean","window","location","hostname","match","reducers","combineReducers","action","Object","assign","store","compose","applyMiddleware","thunkMiddleware","bundle","createStore","createStoreWithMiddleware","devToolsExtension","f","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.8f7a76b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/visibility-on.54d5a3d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/visibility-off.f95eae64.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.e049bfe2.svg\";","module.exports = __webpack_public_path__ + \"static/media/sucess.e237ad43.svg\";","// Libs\nimport React from 'react';\nimport styled from 'styled-components';\n\n// Images\nimport Logo from '../assets/logo.svg';\n\nexport const LogoImage = styled.img`\n  width: ${props => props.width};\n  margin: ${props => props.margin};\n\n\t@media(max-width: 648px) {\n\t\tmargin: ${props => props.marginMobile};\n\t}\n`;\n\nexport default function ImageLogo(props) {\n\treturn <LogoImage src={Logo}\n\t\tmargin={props.margin}\n\t\talt=\"Osc Logo\"\n\t\twidth={props.width}\n\t/>;\n}\n","// Libs\nimport React from 'react';\nimport styled from 'styled-components';\n\n\nexport const InputForm = styled.input`\n  width: ${props => (props.login ? '100%' : '95%')};\n  height: 3.5rem;\n  border: 1px solid;\n  border-color: ${props => (props.isError ? 'tomato' : '#ffcfcd')};\n  border-radius: 3px;\n  background: #fafafa;\n  padding: 0.7rem 0.5rem 0.5rem 0.8rem;\n  font-size: 0.9rem;\n  font-family: Overpass, Light;\n  position: relative;\n\n  @media (max-width: 648px) {\n    width: 100%;\n    height: 3.5rem;\n  }\n`;\n\nexport default function Input(props) {\n\treturn (\n\t\t<InputForm\n\t\t\tlogin={props.login}\n\t\t\ttype={props.type}\n\t\t\tonChange={props.onChange}\n\t\t\tvalue={props.value}\n\t\t\tplaceholder={props.placeholder}\n\t\t\tname={props.name}\n\t\t\tisError={props.isError}\n\t\t\trequired={props.required}\n\t\t/>\n\t);\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport const MyButton = styled.button`\n  margin: ${props => props.margin};\n  width: ${props => props.width};\n  height: 3.5rem;\n  color: #fff;\n  font-size: 1rem;\n  font-weight: 600;\n  font-family: Overpass, Bold;\n  border: 0;\n  border-radius: 3px;\n  background-color: #ff4136;\n  box-shadow: 0 3px 6px #00000029;\n  text-transform: uppercase;\n\n  @media(max-width: 768px){\n    height: ${props => props.heightMobile};\n  }\n\n  @media (max-width: 648px) {\n    width: ${props => (props.widthMobile)};\n    margin: ${props => (props.marginMobile)};\n    padding: ${props => (props.paddingMobile)};\n  }\n\n  @media (max-width: 490px){\n    width: ${props => (props.widthMobileSmall)};\n  }\n`;\n\nexport default function Button(props) {\n\treturn (\n\t\t<MyButton\n\t\t\tonClick={props.onClick}\n\t\t\ttype={props.type}\n\t\t\twidth={props.width}\n\t\t\twidthMobile={props.widthMobile}\n\t\t\twidthMobileSmall={props.widthMobileSmall}\n\t\t\theight={props.height}\n\t\t\theightMobile={props.heightMobile}\n\t\t\tmargin={props.margin}\n\t\t\tmarginMobile={props.marginMobile}\n\t\t\tpadding={props.padding}\n\t\t\tpaddingMobile={props.paddingMobile}\n\t\t>\n\t\t\t{props.text}\n\t\t</MyButton>\n\t);\n}\n","// Libs\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\n// Components\nimport ImageLogo from '../../../components/ImageLogo';\nimport Input from '../../../components/Input';\nimport Button from '../../../components/Button';\n\nimport VisibilityOn from '../../../assets/visibility-on.svg';\nimport VisibilityOff from '../../../assets/visibility-off.svg';\n\n// Redux\nconst mapStateToProps = state => ({\n\temail: state.onboarding.users.email,\n\tpassword: state.onboarding.users.password,\n\tisResetPassword: state.onboarding.isResetPassword,\n\temailReset: state.onboarding.emailReset,\n});\n\nconst ContainerForm = styled.div`\n  height: 100vh;\n  background-color: #FFCFCD;\n  display: flex;\n  align-items: center;\n\tjustify-content: center;\n  margin: 0;\n\n  @media (max-width: 648px) {\n\t\tbackground-color: #fff;\n\t}\n\n\t@media (max-width: 550px) {\n\t\tpadding: 1rem;\n\t}\n`;\n\nconst Form = styled.form`\n  width: 32%;\n  background-color: #fff;\n\tborder-radius: 5px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n\n\t@media (max-width: 1200px) {\n\t\tmin-width: 40%;\n\t}\n\n\t@media (max-width: 982px) {\n\t\twidth: 53%;\n\t} \n\n  @media (max-width: 648px) {\n\t\twidth: 100%;\n\t}\n`;\n\nconst Title = styled.p`\n\twidth: 70%;\n\tcolor: #231F20;\n\tfont-size: 1rem;\n\tfont-family: Overpass,Regular;\n\tmargin-bottom: 2rem;\n\tdisplay: flex;\n\tjustify-content: center;\n\n\t@media (max-width: 648px) {\n\t\twidth: 80%;\n\t}\n\n\t@media (max-width: 490px) {\n\t\twidth: 95%;\n\t}\n`;\n\nconst InputBox = styled.span`\n\twidth: 70%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tposition: relative;\n\n\t@media (max-width: 648px) {\n\t\twidth: 80%;\n\t}\n\n\t@media (max-width: 490px) {\n\t\twidth: 95%;\n\t}\n`;\n\nconst ImagePassword = styled.img`\n  position: absolute;\n  bottom: ${props => (props.off ? '1.2rem' : '0.875rem')};\n  right: 0.7rem;\n\tcursor: pointer;\n\n\t@media (max-width: 648px) {\n\t\tbottom: 1.2rem;\n\t}\n`;\n\nconst Label = styled.label`\n  color: #85144b;\n  font-size: 0.75rem;\n  font-family: Overpass;\n\tfont-weight: bold;\n  margin-top: 0.6rem;\n  margin-bottom: 0.3rem;\n\tpadding-left: 0.8rem;\n\ttext-transform: uppercase;\n\n\t@media (max-width: 648px) {\n\t\tmargin-top: 1rem;\n\t\tmargin-bottom: 0.6rem;\n\t}\n`;\n\nconst Span = styled.span` \n  width: 70%;\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  justify-content: space-between;\n  margin: 1rem 0 3rem;\n\n\t@media (max-width: 648px) {\n\t\twidth: 80%;\n\t\tmargin: 1.8rem;\n\t}\n\n\t@media (max-width: 490px) {\n\t\twidth: 95%;\n\t}\n`;\n\nconst ButtonText = styled(Link)`\n  color: #85144B;\n  font-size: 0.9rem; \n  text-decoration: none;\n\ttext-transform: uppercase;\n`;\n\nconst Error = styled.h4`\n  width: 70%;\n  color: #D63434; \n\tdisplay: flex;\n  justify-content: flex-end;\n  font-size: 0.6rem;\n\tfont-family: Overpass, Regular;\n\t\n\t@media (max-width: 648px) {\n\t\twidth: 80%;\n\t}\t\n\n  @media (max-width: 490px) {\n\t\twidth: 95%;\n\t}\t\n\n  /* @media (max-width: 465px) {\n\t\twidth: 94%;\n\t}\t */\n`;\n\n\nclass LoginScreen extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tvalue: '',\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tpasswordError: '',\n\t\t\terror: undefined,\n\t\t\ttype: 'password',\n\t\t};\n\t}\n\n\thandleSubmit = (ev) => {\n\t\tev.preventDefault();\n\n\t\tif (!this.handleError()) {\n\t\t\tthis.setState({ redirect: '/dashboard' });\n\t\t}\n\t}\n\n\thandleError = () => {\n\t\tconst { email, password } = this.state;\n\t\tconst registeredEmail = this.props.email;\n\t\tconst registeredPassword = this.props.password;\n\t\tlet error = false;\n\n\t\tif (email !== registeredEmail || password.length < 6 || password !== registeredPassword) {\n\t\t\terror = true;\n\t\t}\n\n\t\tthis.setState({\n\t\t\terror,\n\t\t});\n\n\t\treturn error;\n\t}\n\n\thandleChangeEmail = (ev) => {\n\t\tthis.setState({\n\t\t\temail: ev.target.value,\n\t\t\terror: false,\n\t\t});\n\t};\n\n\thandleChangePassword = (ev) => {\n\t\tthis.setState({\n\t\t\tpassword: ev.target.value,\n\t\t\terror: false,\n\t\t});\n\t}\n\n\thandleChangeType = () => {\n\t\tthis.setState({\n\t\t\ttype: this.state.type === 'password' ? 'text' : 'password',\n\t\t});\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\temail, type, error, password, redirect,\n\t\t} = this.state;\n\t\treturn (\n\t\t\t<ContainerForm>\n\t\t\t\t<Form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<ImageLogo margin={this.props.isResetPassword ? '3rem 0 3rem' : '3rem 0 6rem'} />\n\t\t\t\t\t{this.props.isResetPassword && <Title>A senha ({this.props.emailReset}) \n\t\t\t\t\tfoi redefinida, faça login para acessar o seu dashboard.</Title>}\n\t\t\t\t\t<InputBox>\n\t\t\t\t\t\t<Label>e-mail</Label>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tlogin\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tonChange={this.handleChangeEmail}\n\t\t\t\t\t\t\tplaceholder=\"nome@email.com\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InputBox>\n\t\t\t\t\t<InputBox>\n\t\t\t\t\t\t<Label>senha</Label>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tlogin\n\t\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tonChange={this.handleChangePassword}\n\t\t\t\t\t\t\tplaceholder=\"Inserir senha\"\n\t\t\t\t\t\t\tisError={error}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<ImagePassword\n\t\t\t\t\t\t\t\tsrc={type === 'password' ? VisibilityOn : VisibilityOff}\n\t\t\t\t\t\t\t\tonClick={this.handleChangeType}\n\t\t\t\t\t\t\t\toff={type === 'password'}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</InputBox>\n\t\t\t\t\t{error && <Error>E-mail e/ ou senha incorreta</Error>}\n\t\t\t\t\t<Button\n\t\t\t\t\t\twidth='70%'\n\t\t\t\t\t\twidthMobile='80%'\n\t\t\t\t\t\twidthMobileSmall='95%'\n\t\t\t\t\t\tpadding='1rem'\n\t\t\t\t\t\tmargin={this.props.isResetPassword ? '2.5rem 0 3.5rem' : '2.5rem 0 1rem'}\n\t\t\t\t\t\tmarginMobile={this.props.isResetPassword ? '3.7rem 0 3rem' : '3.7rem 0 1.5rem'}\n\t\t\t\t\t\ttext=\"entrar\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t/>\n\t\t\t\t\t{!this.props.isResetPassword && <Span>\n\t\t\t\t\t\t<ButtonText to={'/createuser'}>criar conta</ButtonText>\n\t\t\t\t\t\t<ButtonText to={'/resetpassword'}>resetar conta</ButtonText>\n\t\t\t\t\t</Span>}\n\t\t\t\t</Form>\n\t\t\t\t{redirect && <Redirect to={'/dashboard'} />}\n\t\t\t</ContainerForm>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps)(LoginScreen);\n","// Libs\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n// Components\nimport ImageLogo from '../../../components/ImageLogo';\nimport Button from '../../../components/Button';\n\n// Redux\nconst mapStateToProps = state => ({\n\tonboarding: state.onboarding,\n});\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: #FFCFCD;\n  display: flex;\n  align-items: center;\n  flex-direction: column; \n  margin: 0;\n\n  @media (max-width: 648px) {\n\t\tpadding: 1rem;\n\t\tbackground-color: #fff;\n\t\tjustify-content: center;\n\t}\n`;\n\nconst Content = styled.div`\n  width: 35%;\n  height: 50vh;\n  background-color: #fff;\n  border-radius: 5px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: space-evenly;\n\n  \n\t@media (max-width: 1030px) {\n    width: 50%\n\t}\n\n\t@media (max-width: 648px) {\n    width: 80%;\n\t\theight: 79vh;\n\t}\n`;\n\nconst Title = styled.h1`\n  width: 65%;\n  color: #85144B;\n  font-size: 1rem;\n  font-weight: bold;\n  text-align: center;\n\n  @media (max-width: 648px) {\n\t\twidth: 95%;\n\t}\n`;\n\nconst Code = styled.p`\n  color: #FF4136;\n  font-size: 2.5rem;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-family: Overpass;\n\n  @media (max-width: 648px) {\n    margin: 3rem;\n  }\n`;\n\nconst ContainerParagraph = styled.span` \n  width: 85%;\n  color: #231F20;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media (max-width: 648px) {\n    width: 100%;\n  }\n`;\n\nconst Paragraph = styled.span`\n  font-size: 0.8rem;\n  font-family: Overpass, Regular;\n`;\n\nclass ResetPasswordCode extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tredirect: undefined,\n\t\t};\n\t}\n\n  handleRedirect = () => {\n  \tthis.setState({\n  \t\tredirect: true,\n  \t});\n  }\n\n  render() {\n  \treturn (\n  \t\t<Container>\n  \t\t\t<ImageLogo margin='3rem 0 2.5rem 0'/>\n  \t\t\t<Content>\n  \t\t\t\t<Title>Aqui está o seu código de redefinição de senha:</Title>\n  \t\t\t\t<Code>210704</Code>\n  \t\t\t\t<ContainerParagraph>\n  \t\t\t\t\t<Paragraph>Uma redefinição de senha foi necessária para o seu endereço de e-mail: { }\n  \t\t\t\t\t\t{this.props.onboarding.emailReset ? this.props.onboarding.emailReset : ' nome@email.com. '} { }\n            Se você não realizou essa solicitação,\n            pode acessar sua conta normalmente.\n  \t\t\t\t\t</Paragraph>\n  \t\t\t\t</ContainerParagraph>\n  \t\t\t\t<Button\n  \t\t\t\t\twidth='75%'\n  \t\t\t\t\twidthMobile='100%'\n  \t\t\t\t\tmarginMobile='3rem 0 2rem 0'\n  \t\t\t\t\ttext=\"redefinir senha\"\n  \t\t\t\t\ttype=\"button\"\n  \t\t\t\t\tonClick={this.handleRedirect}\n  \t\t\t\t/>\n  \t\t\t</Content>\n  \t\t\t{this.state.redirect && <Redirect to={'/newpassword'}/>}\n  \t\t</Container>\n  \t);\n  }\n}\n\nexport default connect(mapStateToProps)(ResetPasswordCode);\n","const ADD_NEW_USER = 'osc/register/ADD_NEW_USER';\nconst ADD_NEW_PASSWORD = 'osc/register/ADD_NEW_PASSWORD';\nconst UPDATE_RESET_PASSWORD = 'osc/resetpassword/UPDATE_RESET_PASSWORD';\nconst IS_RESET_PASSWORD = 'osc/resetpassword/IS_RESET_PASSWORD';\n\nconst initialState = {\n\tusers: {\n\t\temail: 'erlane@gmail.com',\n\t\tpassword: '123456',\n\t},\n\tisResetPassword: undefined,\n\temailReset: '',\n};\n\n// REDUCER\nexport default function SignUpReducer(state = initialState, action) {\n\tswitch (action.type) {\n\tcase ADD_NEW_USER:\n\t\treturn Object.assign({}, state, {\n\t\t\tusers: {\n\t\t\t\t...state.users,\n\t\t\t\t...action.user,\n\t\t\t},\n\t\t});\n\t// case ADD_NEW_PASSWORD:\n\t// \treturn Object.assign({}, state, {\n\t// \t\tusers: {\n\t// \t\t\t...state.users,\n\t// \t\t\temail: action.emailReset,\n\t// \t\t\tpassword: action.newPassword,\n\t// \t\t},\n\t// \t});\n\tcase UPDATE_RESET_PASSWORD:\n\t\treturn {\n\t\t\t...state,\n\t\t\temailReset: action.email,\n\t\t};\n\tcase IS_RESET_PASSWORD:\n\t\treturn Object.assign({}, state, {\n\t\t\tisResetPassword: action.info,\n\t\t});\n\tdefault:\n\t\treturn state;\n\t}\n}\n\n// ACTION TYPE\nexport const addNewUser = user => ({\n\ttype: ADD_NEW_USER,\n\tuser,\n});\nexport const addNewPassword = newPassword => ({\n\ttype: ADD_NEW_PASSWORD,\n\tnewPassword,\n});\n\nexport const emailReset = email => ({\n\ttype: UPDATE_RESET_PASSWORD,\n\temail,\n});\n\nexport const isResetPassword = info => ({\n\ttype: IS_RESET_PASSWORD,\n\tinfo,\n});\n","// Libs\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n// Components\nimport ImageLogo from '../../../components/ImageLogo';\nimport Input from '../../../components/Input';\nimport Button from '../../../components/Button';\n\n// Redux\nimport { addNewUser, isResetPassword } from '../../../dataflow/modules/onboarding-modules';\n\nconst mapStateToProps = state => ({\n\tonboarding: state.onboarding,\n\temailReset: state.onboarding.emailReset,\n});\n\nconst mapDispatchToProps = dispatch => ({\n\taddNewUser: (newPassword) => {\n\t\tdispatch(addNewUser(newPassword));\n\t},\n\tisResetPassword: (info) => {\n\t\tdispatch(isResetPassword(info));\n\t},\n});\n\nconst ContainerForm = styled.div`\n  min-height: 100vh;\n  background-color: #FFCFCD;\n\tmin-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  margin: 0;\n  @media (max-width: 648px) {\n\t\tbackground-color: #fff;\n\t}\n`;\n\nconst Form = styled.form`\n  width: 30%;\n\tborder-radius: 5px;\n  background-color: #fff;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n\tmargin: 3rem;\n\n  @media (max-width: 980px) {\n\t\twidth: 40%;\n\t}\n\t@media (max-width: 786px) {\n\t\twidth: 50%;\n\t}\n\t@media (max-width: 648px) {\n\t\twidth: 90%;\n\t\tmargin: 0;\n\t}\n\tinput{\n\t\tmargin: 0.3rem 0 0.6rem 0;\n\t\tborder: ${props => (props.withError === true ? '1px solid #f00' : '1px solid #ffcfcd')};\n\t}\n`;\n\nconst Span = styled.span`\n\twidth: 80%;\n  @media (max-width: 648px) {\n\t\twidth: 90%;\n\t}\n`;\n\nconst Title = styled.h1`\n  color: #231F20;\n  font-size: 1.25rem;\n  font-weight: 900;\n  font-family: Overpass;\n  margin: 2rem 0 1.5rem 0;\n\ttext-transform: uppercase;\n  @media (max-width: 648px) {\n\t\tdisplay: none;\n\t}\n`;\n\nconst Paragraph = styled.p`\n\twidth: ${props => props.width};\n  color: #231F20;\n  font-family: Overpass, Regular;\n  margin-bottom: 1.5rem;\n\t@media (max-width: 648px) {\n\t\tmargin-top: 3rem;\n\t}\n\t@media (max-width: 460px) {\n\t\tfont-size: 0.9rem;\n\t\twidth: 90%;\n\t}\n`;\n\nconst ErrorMessage = styled.h4`\n  color: #D63434;\n  display: flex;\n  justify-content: flex-end;\n  font-size: 0.6rem;\n  font-family: Overpass, Regular;\n`;\n\nconst Label = styled.label`\n  color: #85144B;\n  font-size: 0.75rem;\n  font-family: Overpass;\n  font-weight: bold;\n  margin: 0.9rem;\n\ttext-transform: uppercase;\n`;\n\nconst BackLogin = styled.span` \n  display: flex;\n  justify-content: center;\n`;\n\nconst ButtonText = styled(Link)`\n\tcolor: #85144B;\n\tfont-size: 1rem; \n\tfont-family: Overpass, Regular;\n\tmargin-bottom: 2rem;\n\ttext-decoration: none;\n\ttext-transform: uppercase;\n`;\n\nclass NewPasswordScreen extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnewPassword: '',\n\t\t\tnewPasswordError: false,\n\t\t\trepeatPassword: '',\n\t\t\trepetPasswordError: false,\n\t\t\tredirect: false,\n\t\t};\n\t}\n\n\thandleSubmit = (ev) => {\n\t\tev.preventDefault();\n\t\tthis.handleErrors();\n\t}\n\n\thandleErrors = () => {\n\t\tconst { newPassword, repeatPassword } = this.state;\n\t\tconst { emailReset } = this.props;\n\n\t\tif (newPassword.length < 6) {\n\t\t\tthis.setState({\n\t\t\t\tnewPasswordError: true,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tnewPasswordError: false,\n\t\t\t});\n\t\t}\n\n\t\tif (newPassword !== repeatPassword) {\n\t\t\tthis.setState({\n\t\t\t\trepetPasswordError: true,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\trepetPasswordError: false,\n\t\t\t});\n\t\t}\n\n\t\tif (newPassword.length >= 6 && newPassword === repeatPassword) {\n\t\t\tthis.props.addNewUser({ email: emailReset, password: newPassword });\n\t\t\tthis.props.isResetPassword(true);\n\t\t\tthis.setState({ redirect: true });\n\t\t}\n\t}\n\n\thandleChangeNewPassword = (ev) => {\n\t\tthis.setState({\n\t\t\tnewPassword: ev.target.value,\n\t\t});\n\t}\n\n\thandleChangeRepetPassword = (ev) => {\n\t\tthis.setState({\n\t\t\trepeatPassword: ev.target.value,\n\t\t});\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tnewPasswordError, repetPasswordError, redirect, newPassword, confirmationCode, repeatPassword,\n\t\t} = this.state;\n\n\t\tconst errorMessages = [\n\t\t\t'Use 6 caracteres ou mais para a sua senha',\n\t\t\t'Os valores digitados não coincidem. Tente novamente',\n\t\t];\n\n\t\treturn (\n\t\t\t<ContainerForm>\n\t\t\t\t<ImageLogo margin='3rem 0 0 0' />\n\t\t\t\t<Form onSubmit={this.handleSubmit} withError={newPasswordError || repetPasswordError}>\n\t\t\t\t\t<Span>\n\t\t\t\t\t\t<Title>redefinição de senha</Title>\n\t\t\t\t\t\t<Paragraph width='100%'>Um código de confirmação foi enviado para {this.props.onboarding.emailReset ? this.props.onboarding.emailReset : ' nome@email.com'}, por favor, cole-o abaixo:</Paragraph>\n\t\t\t\t\t\t<Label>código de confirmação</Label>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tlogin\n\t\t\t\t\t\t\tvalue={confirmationCode}\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tplaceholder=\"Insira aqui o código\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Label>nova senha</Label>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tlogin\n\t\t\t\t\t\t\tvalue={newPassword}\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tonChange={ev => this.handleChangeNewPassword(ev)}\n\t\t\t\t\t\t\tplaceholder=\"Insira aqui sua senha\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{newPasswordError && <ErrorMessage>{errorMessages[0]}</ErrorMessage>}\n\t\t\t\t\t\t<Label>repita nova senha</Label>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tlogin\n\t\t\t\t\t\t\tvalue={repeatPassword}\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tonChange={ev => this.handleChangeRepetPassword(ev)}\n\t\t\t\t\t\t\tplaceholder=\"Repita sua senha\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{repetPasswordError && <ErrorMessage>{errorMessages[1]}</ErrorMessage>}\n\t\t\t\t\t</Span>\n\t\t\t\t\t<Button\n\t\t\t\t\t\twidth='80%'\n\t\t\t\t\t\twidthMobile='90%'\n\t\t\t\t\t\tmargin='1rem 0 1.5rem 0;'\n\t\t\t\t\t\tmarginMobile='1rem 0 2.5rem'\n\t\t\t\t\t\ttext=\"prossiga com nova senha\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t/>\n\t\t\t\t\t<BackLogin>\n\t\t\t\t\t\t<ButtonText to={'/resetcode'}>reenviar e-mail</ButtonText>\n\t\t\t\t\t</BackLogin>\n\t\t\t\t</Form>\n\t\t\t\t{redirect && <Redirect to={'/'} />}\n\t\t\t</ContainerForm>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPasswordScreen);\n","// Libs\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n// Components\nimport ImageLogo from '../../../components/ImageLogo';\nimport Input from '../../../components/Input';\nimport Button from '../../../components/Button';\n\n// Redux\nimport { emailReset } from '../../../dataflow/modules/onboarding-modules';\n\n\nconst mapStateToProps = state => ({\n\tonboarding: state.onboarding,\n});\n\nconst mapDispatchToProps = dispatch => ({\n\temailReset: (email) => {\n\t\tdispatch(emailReset(email));\n\t},\n});\n\nexport const ContainerForm = styled.div`\n\theight: 100vh;\n\tbackground-color: #FFCFCD;\n\tdisplay: flex;\n\talign-items: center;\n\tflex-direction: column;\n\tjustify-content: center; \n\tmargin: 0;\n\n\t@media (max-width: 648px) {\n\t\tbackground-color: #fff;\n\t\tpadding: 1rem;\n\t\tjustify-content: center;\n\t}\n`;\n\nconst Form = styled.form`\n\twidth: 25%;\n\tborder-radius: 5px;\n\tbackground-color: #fff;\n\tpadding: 2rem 0 ;\n\tdisplay: flex;\n\talign-items: center;\n\tflex-direction: column;\n\n\tinput{\n\t\tborder: ${props => (props.withError === true ? '1px solid #f00' : '1px solid #ffcfcd')};\n\t}\n\n\t@media (max-width: 1440px) {\n\t\twidth: 32%;\n\t}\n\n\t@media (max-width: 1300px) {\n\t\twidth: 40%;\n\t}\n\n\t@media (max-width: 986px) {\n\t\twidth: 50%;\n\t}\n\n\t@media (max-width: 786px) {\n\t\twidth: 65%;\n\t}\n\n\t@media (max-width: 648px) {\n\t\twidth: 100%;\n\t}\n`;\n\nconst Title = styled.h1`\n\twidth: 85%;\n\tfont-size: 1.37rem;\n\tfont-family: Overpass;\n\tfont-weight: 900;\n\tmargin-top: 1rem;\n\ttext-transform: uppercase;\n\n\t@media (max-width: 648px) {\n\t\twidth: 92%;\n\t\tmargin: 0 0 3rem 0;\n\t\tfont-size: 1.25rem;\n\t}\n`;\n\nconst ErrorMessage = styled.p`\n\tfont-size: 0.7rem;\n\tcolor: #f00;\n\talign-self: flex-start;\n\tmargin-top: 0.5rem;\n`;\n\nconst Box = styled.span`\n\t width: 85%;\n\t display: flex;\n\t flex-direction: column;\n\n\t@media (max-width: 648px) {\n\t\twidth: 96%;\n\t}\n`;\n\nconst Label = styled.label`\n\tcolor: #85144B;\n\tfont-size: 0.75rem;\n\tmargin: 1.6rem 0rem 0.3rem 0.9rem;\n\tfont-family: Overpass, Regular;\n\ttext-transform: uppercase;\n`;\n\nconst BackLogin = styled.span` \n\tdisplay: flex;\n\talign-items: center;\n\tflex-direction: row;\n\tjustify-content: space-around;\n`;\n\nconst ButtonText = styled(Link)` \n\tcolor: #85144B;\n\tfont-family: Overpass, Regular;\n\ttext-decoration: none;\n\ttext-transform: uppercase;\n`;\n\nclass ResetPasswordEmailScreen extends Component {\n\tstate = {\n\t\tvalue: '',\n\t\temail: '',\n\t\tredirect: null,\n\t\tisErrorEmail: false,\n\t}\n\n\thandleChangeEmail = (ev) => {\n\t\tthis.setState({\n\t\t\temail: ev.target.value,\n\t\t});\n\t};\n\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif (this.state.email !== this.props.onboarding.users.email) {\n\t\t\tthis.setState({\n\t\t\t\tisErrorEmail: true,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tisErrorEmail: false,\n\t\t\t});\n\t\t\tthis.props.emailReset(this.state.email);\n\t\t\tthis.setState({ redirect: '/resetcode' });\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<ContainerForm>\n\t\t\t\t<ImageLogo margin='0 0 4rem' />\n\t\t\t\t<Form onSubmit={this.handleSubmit} withError={this.state.isErrorEmail}>\n\t\t\t\t\t<Title>redefinição de senha</Title>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Label>e-mail</Label>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tlogin\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tonChange={this.handleChangeEmail}\n\t\t\t\t\t\t\tplaceholder=\"nome@email.com\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{this.state.isErrorEmail && <ErrorMessage>E-mail não encontrado</ErrorMessage>}\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\twidth='100%'\n\t\t\t\t\t\t\tmargin='1rem 0 1.5rem 0'\n\t\t\t\t\t\t\tmarginMobile='5.9rem 0 2.7rem 0'\n\t\t\t\t\t\t\ttext=\"solicitar redefinição de senha\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<BackLogin>\n\t\t\t\t\t\t<ButtonText to={'/login'}>volte ao login</ButtonText>\n\t\t\t\t\t</BackLogin>\n\t\t\t\t</Form>\n\t\t\t\t{this.state.redirect && <Redirect to={'/resetcode'} />}\n\t\t\t</ContainerForm>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResetPasswordEmailScreen);\n","// Libs\nimport React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n// Components\nimport Button from '../../../components/Button';\n\n// Images\nimport sucessImage from '../../../assets/sucess.svg';\n\nconst mapStateToProps = state => ({\n\tonboarding: state.onboarding,\n});\n\nconst Modal = styled.div`\n  width: 35vw;\n  height: 65vh;\n  background: #fff;\n\tborder-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 0 0.5rem;\n\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n  @media (max-width: 648px) {\n    width: 100%;\n    height: 100vh;\n    justify-content: space-evenly;\n    padding: 0.5rem;\n  }\n\n  a{\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\ttext-decoration: none;\n\t}\n`;\n\nconst TitleTerms = styled.h1`\n\tfont-family: Overpass, ExtraBold;\n\tfont-size: 1.25rem;\n\t\n\t@media(max-width: 648px){\n\t\tfont-size: 1.3rem;\n\t\ttext-align: center;\n\t}\n`;\n\nconst SucessImage = styled.img`\n\twidth: 9rem;\n`;\n\nconst TextTerms = styled.p`\n\tfont-family: Overpass;\n\twidth: 80%;\n\tfont-size: 1rem;\n\n\t@media(max-width: 648px){\n\t\tfont-size: 1rem;\n\t\tline-height: 1.5rem; \n\t}\n`;\n\nconst TextTermsBold = styled.strong`\n\tmargin-left: 0.5rem;\n\ttext-decoration: underline;\n\tcursor: pointer;\n`;\n\nconst CreateUserSucessScreen = props => (\n\t<Modal>\n\t\t<TitleTerms>Cadastro concluído!</TitleTerms>\n\t\t<SucessImage src={sucessImage} alt=\"sucess image\" />\n\t\t<TextTerms>\n      Enviamos um e-mail de confirmação para\n\t\t\t<TextTermsBold>{props.onboarding.users.email ? props.onboarding.users.email : 'nome@email.com'}</TextTermsBold>. Verifique sua caixa de entrada para\n      prosseguir.\n\t\t</TextTerms>\n\t\t<TextTerms>\n      Caso não tenha recebido a confirmação, clique em\n\t\t\t<TextTermsBold>Reenviar e-mail.</TextTermsBold>\n\t\t</TextTerms>\n\t\t<Link to=\"/\">\n\t\t\t<Button\n\t\t\t\twidth=\"87%\"\n\t\t\t\theight=\"50px\"\n\t\t\t\tmargin=\"1rem 0\"\n\t\t\t\ttext=\"fazer login\"\n\t\t\t/>\n\t\t</Link>\n\t</Modal>\n);\nexport default connect(mapStateToProps)(CreateUserSucessScreen);\n","/* eslint-disable no-mixed-spaces-and-tabs */\n// Libs\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\n// Components\nimport Button from '../../../components/Button';\nimport Input from '../../../components/Input';\nimport ImageLogo from '../../../components/ImageLogo';\nimport CreateUserSucess from './CreateUserSucessScreen';\n\n// Images\nimport VisibilityOff from '../../../assets/visibility-off.svg';\nimport VisibilityOn from '../../../assets/visibility-on.svg';\n\n// Redux\nimport { addNewUser } from '../../../dataflow/modules/onboarding-modules';\n\nconst mapStateToProps = state => ({\n\tsignup: state.signup,\n});\n\nconst mapDispatchToProps = dispatch => ({\n\taddNewUser: (user) => {\n\t\tdispatch(addNewUser(user));\n\t},\n});\n\nconst Container = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #ffcfcd;\n\n  @media(max-width: 648px){\n    background: #FFF;\n    height: auto;\n  }\n`;\n\nconst Form = styled.form`\n  min-width: 32%;\n  background-color: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 1rem 0;\n  border-radius: 5px;\n  box-shadow: 0 1px 2px #00000029;\n\n  input {\n    border: ${props => (props.withError === true ? '1px solid #f00' : '1px solid #ffcfcd')};\n  }\n\n  @media (max-width: 768px) {\n    margin-top: 1rem;\n    margin-bottom: 0.5rem;\n    padding: 0 2rem;\n  }\n\n  @media (max-width: 648px) {\n    margin: 0;\n\t\twidth: 100%;\n  }\n`;\n\nconst BlockSmallerInput = styled.span`\n\twidth: 90%;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tposition: relative;\n`;\n\nconst BlockTitle = styled.span`\n\twidth: 90%;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: flex-start;\n\n\t@media(max-width: 648px){\n\t\twidth: 100%;\n\t}\n`;\n\nconst TitleForm = styled.h1`\n  font-size: 1.3rem;\n  font-family: \"Overpass\", ExtraBold;\n  text-transform: uppercase;\n\tmargin: 1.5rem 0 1rem 1.12rem;\n  align-self: flex-start;\n  \n  @media(max-width: 768px){\n\t  margin-left: 0.7rem;\n  }\n\n  @media (max-width: 648px) {\n\t\tmargin: 2rem 0 1rem 0.25rem;\n\t\tfont-size: 1.3rem;\n\t}\n`;\n\nconst Label = styled.label`\n  width: 92%;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  position: relative;\n\n\t@media(max-width: 768px){\n\t\twidth: 95%;\n\t}\n\n  @media (max-width: 648px) {\n\t\twidth: 95%;\n\t\tmargin-left: 0.3rem;\n  }\n\n  @media(max-width: 425px){\n\t\twidth: 100%;\n  }\n`;\n\nconst ParagraphInput = styled.p`\n\tcolor: #85144b;\n\talign-self: flex-start;\n\tfont-size: 0.75rem;\n\tfont-family: Overpass;\n\tfont-weight: bold;\n\tmargin: 1rem 0 0.2rem 1.4rem;\n\ttext-transform: uppercase;\n\n\t@media (max-width: 425px) {\n\t\ttext-align: left;\n\t\tmargin-left: 0.2rem;\n\t}\n`;\n\nconst ErrorMessage = styled.p`\n  font-size: 0.6rem;\n  color: #f00;\n  align-self: flex-start;\n  font-weight: normal;\n  margin: 0.5rem 0 0.5rem 0.8rem;\n\n  @media (max-width: 425px) {\n    margin: 0.5rem 0 0.5rem 0;\n  }\n`;\n\nconst ErrorEmpty = styled.p`\n  font-size: 0.7rem;\n  color: #F00;\n  align-self: flex-start;\n  font-weight: normal;\n  margin: 0.5rem 0 0.5rem 1.9rem;\n\n\t@media(max-width: 2560px){\n\t\tmargin: 0.5rem 0 0.5rem 3.2rem;\n\t}\n\n  @media(max-width: 648px){\n\t  align-self: flex-start;\n\t  margin: 1rem 0 1rem 0.2rem;\n  }\n`;\nconst ImagePassword = styled.img`\n  position: absolute;\n  bottom: 1.2rem;\n  right: 0.5rem;\n  cursor: pointer;\n\n  @media(max-width: 648px){\n    bottom: 1.2rem;\n  }\n`;\n\nconst TextTerms = styled.p`\n  font-size: 0.8rem;\n  margin-top: 1.25rem;\n  width: 95%;\n  color: #505050;\n  font-family: Overpass, Regular;\n  text-align: center;\n\n  strong {\n    color: #85144b;\n    font-size: 0.7rem;\n    cursor: pointer;\n    text-decoration: underline;\n    margin: 0 0.2rem;\n    font-family: Overpass, Regular;\n  }\n\n  @media(max-width: 648px){\n    font-size: 0.8rem;\n\t\twidth: 63%;\n  }\n`;\n\n// Terms\nconst Overlay = styled.div`\n\tmin-width: 100%;\n  min-height: 100vh;\n  background-color: #00000060;\n  position: fixed;\n  top: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  padding: 2.5rem 0;\n  z-index: 99;\n\n\t@media(max-width: 648px) {\n\t\tpadding: 0;\n\t}\n`;\n\nconst Modal = styled.div`\n\twidth: 33%;\n  background: #fff;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 4px;\n  z-index: 99;\n\n  @media(max-width: 1024px){\n    width: 40%;\n  }\n  @media (max-width: 768px) {\n    width: 60%;\n  }\n  @media (max-width: 648px) {\n    padding-bottom: 5rem;\n    width: 100%;\n    max-height: 100vh;\n    justify-content: flex-start;\n    align-self: center;\n\t\toverflow-y: auto;\n  }\n`;\n\nconst TitleTerms = styled.h1`\n  align-self: flex-start;\n  margin: 1rem 1rem;\n  font-family: Overpass, Bold;\n  font-size: 1.4rem;\n  text-transform: uppercase;\n\n  @media (max-width: 648px) {\n    margin: 3rem 0 0.5rem 0;\n    font-size: 1.5rem;\n    align-self: center;\n  }\n`;\n\nconst ButtonTerms = styled.button`\n\twidth: 7.5rem;\n\theight: 2.25rem;\n\tbackground-color: #ff4136;\n\tcolor: #fff;\n\ttext-transform: uppercase;\n\tborder: 0;\n\tborder-radius: 4px;\n\talign-self: flex-end;\n\tmargin: 0.4rem 0.5rem 0.4rem 0;\n\tbox-shadow: 0 3px 6px #00000029;\n\n\t@media(max-width: 648px){\n\t\tposition: fixed;\n\t\tbottom: 0;\n\t\theight: 3.5rem;\n\t}\n\n  @media (max-width: 648px) {\n    align-self: center;\n    width: 90%;\n    height: 56px;\n    margin: 0.8rem 0;\n    font-size: 1rem;\n    font-weight: bold;\n  }\n`;\n\nconst BlockTerms = styled.div`\n  width: 97%;\n  height: 90%;\n  background: #ffcfcd;\n  padding: 1rem 1rem;\n  border-radius: 4px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n\n  @media(max-width: 648px){\n    background: #FFF;\n    height: 100%;\n    justify-content: space-around;\n  }\n`;\n\nconst Terms = styled.p`\n  width: 100%;\n  font-family: Overpass, Regular;\n  font-size: 0.9rem;\n  margin: 0.9rem 0;\n\n  u{\n    color: #f00;\n    margin: 0 0.2rem;\n  }\n\n  @media(max-width: 648px){\n    margin: 1.5rem 0;\n    font-size: 1rem;\n    width: 90%;\n    align-self: center;\n  }\n`;\n\nconst SubtitleTerms = styled.h3`\n    margin: 1rem 0;\n    font-size: 0.87rem;\n    font-family: Overpass, Bold;\n\n  @media(max-width: 648px){\n    width: 75%;\n    align-self: center;\n    text-align: center;\n  }\n`;\n\nclass CreateUserScreen extends Component {\n  state = {\n  \ttogglePassword: false,\n  \tmodalSucess: false,\n  \tuser: {\n  \t\tname: '',\n  \t\tsurname: '',\n  \t\tcpf: '',\n  \t\temail: '',\n  \t\ttelephone: '',\n  \t\tpassword: '',\n  \t},\n  \tnameError: false,\n  \tisErrorCpf: false,\n  \tisErrorPassword: false,\n  \tisEmpty: false,\n  \tisTermsOpen: false,\n  };\n\n  togglePassword = (ev) => {\n  \tev.preventDefault();\n  \tthis.setState({\n  \t\ttogglePassword: !this.state.togglePassword,\n  \t});\n  };\n\n\thandleModalTerms = () => {\n\t\tthis.setState({\n\t\t\tisTermsOpen: !this.state.isTermsOpen,\n\t\t});\n\t};\n\n  handleModalSucess = () => {\n  \tthis.setState({\n  \t\tmodalSucess: !this.state.modalSucess,\n  \t});\n  };\n\n  handleChange = (field, ev) => {\n  \tconst { user } = this.state;\n  \tuser[field] = ev.target.value;\n  \tthis.setState({ user });\n  };\n\n\n \tisValidCPF = () => {\n\t const { cpf } = this.state.user;\n\t let numbers; let digits; let sum; let i; let result;\n\t let digitsEqual;\n \t\tdigitsEqual = 1;\n \t\tif (cpf.length < 11) return false;\n \t\tfor (i = 0; i < cpf.length - 1; i++) {\n \t\t\tif (cpf.charAt(i) != cpf.charAt(i + 1)) {\n \t\t\t\tdigitsEqual = 0;\n \t\t\t\tbreak;\n \t\t\t}\n \t\t}\n \t\tif (!digitsEqual) {\n \t\t\tnumbers = cpf.substring(0, 9);\n \t\t\tdigits = cpf.substring(9);\n \t\t\tsum = 0;\n \t\t\tfor (i = 10; i > 1; i--) sum += numbers.charAt(10 - i) * i;\n \t\t\tresult = sum % 11 < 2 ? 0 : 11 - sum % 11;\n \t\t\tif (result != digits.charAt(0)) return false;\n \t\t\tnumbers = cpf.substring(0, 10);\n \t\t\tsum = 0;\n \t\t\tfor (i = 11; i > 1; i--) sum += numbers.charAt(11 - i) * i;\n \t\t\tresult = sum % 11 < 2 ? 0 : 11 - sum % 11;\n \t\t\tif (result != digits.charAt(1)) return false;\n \t\t\treturn true;\n \t\t}\n \t\treturn false;\n \t}\n\n  handleSubmit = (ev) => {\n  \tev.preventDefault();\n  \tthis.handleErrors();\n  };\n\n  handleErrors = () => {\n  \tconst { user } = this.state;\n  \tconst {\n  \t\tname,\n  \t\tsurname,\n  \t\temail,\n  \t\ttelephone,\n  \t\tpassword,\n  \t\tcpf,\n  \t} = this.state.user;\n\n  \tif (\n  \t\tname === ''\n      || surname === ''\n      || email === ''\n      || telephone === ''\n      || password === ''\n  \t) {\n  \t\tthis.setState({\n  \t\t\tisEmpty: true,\n  \t\t});\n  \t} else {\n  \t\tthis.setState({\n  \t\t\tisEmpty: false,\n  \t\t});\n  \t}\n  \tif (name) {\n  \t\tthis.setState({\n  \t\t\tnameError: true,\n  \t\t});\n  \t} else {\n  \t\tthis.setState({\n  \t\t\tnameError: false,\n  \t\t});\n  \t}\n  \tif (cpf.length < 11 && cpf.length > 11) {\n  \t\tthis.setState({\n  \t\t\tisErrorCpf: !this.isValidCPF(),\n  \t\t});\n  \t} else {\n  \t\tthis.setState({\n  \t\t\tisErrorCpf: !this.isValidCPF(),\n  \t\t});\n  \t}\n  \tif (password.length < 6 && password.length > 1) {\n  \t\tthis.setState({\n  \t\t\tisErrorPassword: true,\n\t\t  });\n  \t} else {\n  \t\tthis.setState({\n  \t\t\tisErrorPassword: false,\n  \t\t});\n  \t}\n\n\n\t  if (password.length >= 6 && cpf.length === 11) {\n  \t\tthis.props.addNewUser(user);\n\t\t  this.handleModalSucess();\n  \t}\n  };\n\n\trenderTerms = () => (\n\t\t<Overlay>\n\t\t\t<Modal>\n\t\t\t\t<TitleTerms>termos de serviço</TitleTerms>\n\t\t\t\t<BlockTerms>\n\t\t\t\t\t<SubtitleTerms>Boas vindas ao Aplicativo do Estatuto OSC Legal</SubtitleTerms>\n\t\t\t\t\t<Terms>\n            Esta é uma ferramenta voltada a fornecer um guia para que as associações possam elaborar ou\n\t\t\t\t\t\treformar seus estatutos, documento obrigatório nessas organizações.\n\t\t\t\t\t</Terms>\n\t\t\t\t\t<Terms>\n            Cada senha dará oportunidade para que você possa trabalhar no documento por 30 dias.\n\t\t\t\t\t\tAo final desse prazo se considera finalizado o texto,\n\t\t\t\t\t\tgerando-se o documento equivalente no estado em que estiver.\n\t\t\t\t\t</Terms>\n\t\t\t\t\t<Terms>\n            De acordo com a legislação brasileira, para registro de estatuto de associação é obrigatória a\n\t\t\t\t\t\tassinatura de advogad@ inscrito na OAB. Recomendamos que procure um/a profissional especialista.\n\t\t\t\t\t</Terms>\n\t\t\t\t\t<Terms>\n            Qualquer dúvida e/ou esclarecimento entre em contato com nossa equipe:\n\t\t\t\t\t\t<u>\n              osclegal@gmail.com\n\t\t\t\t\t\t</u>\n\t\t\t\t\t</Terms>\n\t\t\t\t</BlockTerms>\n\t\t\t\t<ButtonTerms onClick={this.handleModalTerms}>ok</ButtonTerms>\n\t\t\t</Modal>\n\t\t</Overlay>\n\t)\n\n\trender() {\n\t\tconst errorMessage = [\n\t\t\t'Senha fraca',\n  \t\t'CPF inválido',\n  \t\t'Preencha todos os campos',\n  \t\t'E-mail inválido',\n\t\t];\n\n  \tconst {\n\t\t\tisErrorPassword,\n  \t\tmodalSucess,\n\t\t\tisEmpty,\n\t\t\tnameError,\n\t\t\tisErrorCpf,\n\t\t\ttogglePassword,\n\t\t\tname,\n\t\t\tsurname,\n\t\t\tcpf,\n\t\t\temail,\n\t\t\ttelephone,\n\t\t\tpassword,\n\t\t\tisTermsOpen,\n  \t} = this.state;\n\n  \treturn (\n  \t\t<>\n  \t\t\t{modalSucess === true ? (\n  \t\t\t\t<Container>\n  \t\t\t\t\t<CreateUserSucess handleModalSucess={this.handleModalSucess} />\n  \t\t\t\t</Container>\n  \t\t\t) : (\n  \t\t\t\t<Container>\n  \t\t\t\t\t<Form\n\t\t\t\t\t\t\tonSubmit={this.handleSubmit}\n\t\t\t\t\t\t\twithError={isEmpty || nameError || isErrorPassword || isErrorCpf}\n  \t\t\t\t\t>\n  \t\t\t\t\t\t<ImageLogo\n  \t\t\t\t\t\t\tmargin=\"3rem 0 2rem 0\"\n\t\t\t\t\t\t\t\tmarginMobile=\"15rem 0 2rem 0\"\n  \t\t\t\t\t\t\twidth=\" 150px\"\n  \t\t\t\t\t\t/>\n  \t\t\t\t\t\t<BlockTitle>\n  \t\t\t\t\t\t\t<TitleForm>criar conta</TitleForm>\n  \t\t\t\t\t\t</BlockTitle>\n  \t\t\t\t\t\t<Label>\n  \t\t\t\t\t\t\t<ParagraphInput>Nome</ParagraphInput>\n  \t\t\t\t\t\t\t<Input\n  \t\t\t\t\t\t\t\ttype=\"text\"\n  \t\t\t\t\t\t\t\tonChange={ev => this.handleChange('name', ev)}\n  \t\t\t\t\t\t\t\tvalue={name}\n  \t\t\t\t\t\t\t\tplaceholder=\"Nome\"\n  \t\t\t\t\t\t\t\tname=\"nome\"\n\t\t\t\t\t\t\t\t\trequired\n  \t\t\t\t\t\t\t/>\n  \t\t\t\t\t\t</Label>\n  \t\t\t\t\t\t<Label>\n  \t\t\t\t\t\t\t<ParagraphInput>Sobrenome</ParagraphInput>\n  \t\t\t\t\t\t\t<Input\n  \t\t\t\t\t\t\t\ttype=\"text\"\n  \t\t\t\t\t\t\t\tonChange={ev => this.handleChange('surname', ev)}\n  \t\t\t\t\t\t\t\tvalue={surname}\n  \t\t\t\t\t\t\t\tplaceholder=\"Sobrenome\"\n\t\t\t\t\t\t\t\t\tname=\"sobrenome\"\n\t\t\t\t\t\t\t\t\trequired\n  \t\t\t\t\t\t\t/>\n  \t\t\t\t\t\t</Label>\n  \t\t\t\t\t\t<Label>\n  \t\t\t\t\t\t\t<ParagraphInput>cpf</ParagraphInput>\n  \t\t\t\t\t\t\t<Input\n  \t\t\t\t\t\t\t\ttype=\"number\"\n  \t\t\t\t\t\t\t\tonChange={ev => this.handleChange('cpf', ev)}\n  \t\t\t\t\t\t\t\tvalue={cpf}\n  \t\t\t\t\t\t\t\tplaceholder=\"000000-0\"\n  \t\t\t\t\t\t\t\tname=\"cpf\"\n\t\t\t\t\t\t\t\t\trequired\n  \t\t\t\t\t\t\t/>\n  \t\t\t\t\t\t\t{isEmpty ? this.state.isEmpty : isErrorCpf && <ErrorMessage>{errorMessage[1]}</ErrorMessage>}\n  \t\t\t\t\t\t</Label>\n  \t\t\t\t\t\t<Label>\n  \t\t\t\t\t\t\t<ParagraphInput>e-mail</ParagraphInput>\n  \t\t\t\t\t\t\t<Input\n  \t\t\t\t\t\t\t\ttype=\"email\"\n  \t\t\t\t\t\t\t\tonChange={ev => this.handleChange('email', ev)}\n  \t\t\t\t\t\t\t\tvalue={email}\n  \t\t\t\t\t\t\t\tname=\"email\"\n  \t\t\t\t\t\t\t\tplaceholder=\"nome@email.com\"\n  \t\t\t\t\t\t\t\trequired\n  \t\t\t\t\t\t\t/>\n  \t\t\t\t\t\t</Label>\n  \t\t\t\t\t\t<Label>\n  \t\t\t\t\t\t\t<ParagraphInput>telefone</ParagraphInput>\n  \t\t\t\t\t\t\t<Input\n  \t\t\t\t\t\t\t\ttype=\"tel\"\n  \t\t\t\t\t\t\t\tonChange={ev => this.handleChange('telephone', ev)}\n  \t\t\t\t\t\t\t\tvalue={telephone}\n  \t\t\t\t\t\t\t\tplaceholder=\"(00) 00000-0000\"\n\t\t\t\t\t\t\t\t\tname=\"telefone\"\n\t\t\t\t\t\t\t\t\trequired\n  \t\t\t\t\t\t\t/>\n  \t\t\t\t\t\t</Label>\n  \t\t\t\t\t\t<Label>\n  \t\t\t\t\t\t\t<ParagraphInput>senha</ParagraphInput>\n  \t\t\t\t\t\t\t<Input\n  \t\t\t\t\t\t\t\tclassName=\"input-password\"\n  \t\t\t\t\t\t\t\ttype={\n  \t\t\t\t\t\t\t\t\ttogglePassword === true ? 'text' : 'password'\n  \t\t\t\t\t\t\t\t}\n  \t\t\t\t\t\t\t\tonChange={ev => this.handleChange('password', ev)}\n  \t\t\t\t\t\t\t\tvalue={password}\n  \t\t\t\t\t\t\t\tplaceholder=\"Inserir senha\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\trequired\n  \t\t\t\t\t\t\t/>\n  \t\t\t\t\t\t\t{togglePassword === true ? (\n  \t\t\t\t\t\t\t\t<BlockSmallerInput>\n  \t\t\t\t\t\t\t\t\t<ImagePassword\n  \t\t\t\t\t\t\t\t\t\tsrc={VisibilityOff}\n  \t\t\t\t\t\t\t\t\t\tonClick={this.togglePassword}\n  \t\t\t\t\t\t\t\t\t/>\n  \t\t\t\t\t\t\t\t</BlockSmallerInput>\n  \t\t\t\t\t\t\t) : (\n  \t\t\t\t\t\t\t\t<BlockSmallerInput>\n  \t\t\t\t\t\t\t\t\t<ImagePassword\n  \t\t\t\t\t\t\t\t\t\tsrc={VisibilityOn}\n  \t\t\t\t\t\t\t\t\t\tonClick={this.togglePassword}\n  \t\t\t\t\t\t\t\t\t/>\n  \t\t\t\t\t\t\t\t</BlockSmallerInput>\n  \t\t\t\t\t\t\t)}\n  \t\t\t\t\t\t\t{isErrorPassword && <ErrorMessage>{errorMessage[0]}</ErrorMessage>}\n\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t{isEmpty && <ErrorEmpty>{errorMessage[2]}</ErrorEmpty>}\n  \t\t\t\t\t\t<TextTerms>\n\t\t\t\t\t\t\t\tClique abaixo para concordar com os\n  \t\t\t\t\t\t\t<strong onClick={this.handleModalTerms}>\n\t\t\t\t\t\t\t\t\tTermos de Serviço\n  \t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t\te registrar.\n  \t\t\t\t\t\t</TextTerms>\n  \t\t\t\t\t\t<Button\n  \t\t\t\t\t\t\twidth=\"87%\"\n  \t\t\t\t\t\t\theight=\"50px\"\n  \t\t\t\t\t\t\tmargin=\"1rem 0 1.5rem 0\"\n  \t\t\t\t\t\t\ttext=\"concordar e criar conta\"\n  \t\t\t\t\t\t\ttype=\"submit\"\n  \t\t\t\t\t\t\tonClick={this.handleSubmit}\n  \t\t\t\t\t\t\twidthMobile=\"100%\"\n  \t\t\t\t\t\t/>\n  \t\t\t\t\t</Form>\n\t\t\t\t\t\t{ isTermsOpen && this.renderTerms() }\n  \t\t\t\t</Container>\n  \t\t\t)}\n  \t\t</>\n  \t);\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateUserScreen);\n","import React, { Component } from 'react';\n\nexport default class Index extends Component {\n  render() {\n    return (\n      <div>\n        <p>Essa tela está ligada como uma rota privada.</p>\n      </div>\n    );\n  }\n}\n","// Libs\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { isAuthenticated } from '../auth';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n\t<Route\n\t\t{...rest}\n\t\trender={props => (isAuthenticated() ? (\n\t\t\t<Component { ...props } />\n\t\t) : (\n\t\t\t<Redirect to={{ pathname: '/', state: { from: props.location } }} />\n\t\t))\n\t\t}\n\t/>\n);\n\nexport default PrivateRoute;\n","// Libs\nimport React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n// Onboarding\nimport Login from '../screens/onboarding/Login/LoginScreen';\n// import LoginResetPasswordScreen from '../screens/onboarding/Login/LoginResetPasswordScreen';\nimport ResetPasswordCode from '../screens/onboarding/Login/ResetPasswordCode';\nimport NewPassowrdScreen from '../screens/onboarding/Login/NewPasswordScreen';\nimport ResetPasswordEmailScreen from '../screens/onboarding/Login/ResetPasswordScreen';\nimport CreateUserScreen from '../screens/onboarding/User/CreateUserScreen';\n\n// Dashboard\nimport Dashboard from '../screens/dashboard/index';\n// import DocumentsScreen from '../screens/dashboard/Documents/DocumentsScreen';\n\nimport PrivateRoute from './PrivateRoute';\n\nconst Routes = () => (\n\t<BrowserRouter>\n\t\t<Switch>\n\t\t\t<Route exact path='/' component={Login} />\n\t\t\t{/* <Route path='/login' component={Login} /> */}\n\t\t\t<Route exact path='/OSC-Legal' component={Login} />\n\t\t\t<Route path='/resetcode' component={ResetPasswordCode} />\n\t\t\t<Route path='/resetpassword' component={ResetPasswordEmailScreen} />\n\t\t\t<Route path='/newpassword' component={NewPassowrdScreen} />\n\t\t\t<Route path='/createuser' component={CreateUserScreen} />\n\n\t\t\t<PrivateRoute path='/dashboard' component={Dashboard} />\n\t\t\t{/* <Route exact path='/documents' component={DocumentsScreen} /> */}\n\t\t</Switch>\n\t</BrowserRouter>\n);\n\nexport default Routes;\n","// Libs\nimport React from 'react';\n\n// Routes\nimport Routes from './routes/routes';\n\nconst App = () => <Routes />;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Libs\nimport {\n\tcompose, createStore, applyMiddleware, combineReducers,\n} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\n// Reducers\nimport Onboarding from './dataflow/modules/onboarding-modules';\n\nconst reducers = combineReducers({\n\tonboarding: Onboarding,\n});\n\nexport default function configureStore(initialState) {\n\tconst bundle = compose(applyMiddleware(thunkMiddleware));\n\tconst createStoreWithMiddleware = bundle(createStore);\n\tconst store = createStoreWithMiddleware(\n\t\treducers,\n\t\tinitialState,\n\t\twindow.devToolsExtension ? window.devToolsExtension() : f => f,\n\t);\n\n\treturn store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore from './store';\n\nconst store = configureStore({});\n\nReactDOM.render((\n\t<Provider store={store}>\n\t\t<App/>\n\t</Provider>\n), document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}